inet.applications.dhcp.DhcpClient: CALL: module=inet.applications.dhcp.DhcpClient func=inet::DhcpClient::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.applications.dhcp.DhcpClient: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpClient: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpClient: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.dhcp.DhcpClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.dhcp.DhcpClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.dhcp.DhcpClient: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.dhcp.DhcpClient: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpClient: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpClient: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetBroadcastCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpClient: PACKET: insertAtBack inet::DhcpMessage
inet.applications.dhcp.DhcpClient: SCHEDULE:  msg=omnetpp::cMessage kind=inet::DhcpTimerType::START_DHCP ctrl=<null> tags= msgname=Starting DHCP
inet.applications.dhcp.DhcpClient: SCHEDULE:  msg=omnetpp::cMessage kind=inet::DhcpTimerType::T1 ctrl=<null> tags= msgname=TN Timer
inet.applications.dhcp.DhcpClient: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.dhcp.DhcpClient: TAG: addTagIfAbsent inet::InterfaceReq
inet.applications.dhcp.DhcpClient: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.dhcp.DhcpClient: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.dhcp.DhcpClient: TAG: addTagIfAbsent inet::SocketReq
inet.applications.dhcp.DhcpClient: TAG: findTag inet::SocketInd
inet.applications.dhcp.DhcpClient: TAG: getTag inet::Ipv4InterfaceData
inet.applications.dhcp.DhcpServer: CALL: module=inet.applications.dhcp.DhcpServer func=inet::DhcpServer::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpServer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.dhcp.DhcpServer: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.dhcp.DhcpServer: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.dhcp.DhcpServer: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.dhcp.DhcpServer: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.dhcp.DhcpServer: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.dhcp.DhcpServer: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpServer: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpServer: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetBroadcastCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.dhcp.DhcpServer: PACKET: insertAtBack inet::DhcpMessage
inet.applications.dhcp.DhcpServer: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=Start DHCP server
inet.applications.dhcp.DhcpServer: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.dhcp.DhcpServer: TAG: addTagIfAbsent inet::InterfaceReq
inet.applications.dhcp.DhcpServer: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.dhcp.DhcpServer: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.dhcp.DhcpServer: TAG: addTagIfAbsent inet::SocketReq
inet.applications.dhcp.DhcpServer: TAG: findTag inet::Ipv4InterfaceData
inet.applications.dhcp.DhcpServer: TAG: findTag inet::SocketInd
inet.applications.dhcp.DhcpServer: TAG: getTag inet::InterfaceInd
inet.applications.dhcp.DhcpServer: TAG: getTag inet::Ipv4InterfaceData
inet.applications.ethernet.EtherAppClient: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.ethernet.EtherAppClient: INPUT: gate=in msg=inet::Packet kind=4 ctrl=<null> tags=inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SocketInd
inet.applications.ethernet.EtherAppClient: OUTPUT: gate=out msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::SocketReq
inet.applications.ethernet.EtherAppClient: OUTPUT: gate=out msg=inet::Request kind=1 ctrl=inet::Ieee8022LlcSocketOpenCommand tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::SocketReq
inet.applications.ethernet.EtherAppClient: PACKET: insertAtBack inet::EtherAppReq
inet.applications.ethernet.EtherAppClient: SCHEDULE:  msg=omnetpp::cMessage kind=100 ctrl=<null> tags= msgname=generateNextPacket
inet.applications.ethernet.EtherAppClient: SCHEDULE:  msg=omnetpp::cMessage kind=101 ctrl=<null> tags= msgname=generateNextPacket
inet.applications.ethernet.EtherAppClient: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.ethernet.EtherAppClient: TAG: addTagIfAbsent inet::Ieee802SapReq
inet.applications.ethernet.EtherAppClient: TAG: addTagIfAbsent inet::SocketReq
inet.applications.ethernet.EtherAppClient: TAG: addTag inet::Ieee802SapReq
inet.applications.ethernet.EtherAppClient: TAG: addTag inet::MacAddressReq
inet.applications.ethernet.EtherAppClient: TAG: getTag inet::SocketInd
inet.applications.ethernet.EtherAppServer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.ethernet.EtherAppServer: INPUT: gate=in msg=inet::Packet kind=4 ctrl=<null> tags=inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.ethernet.EtherAppServer: INPUT: gate=in msg=inet::Packet kind=4 ctrl=<null> tags=inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SocketInd
inet.applications.ethernet.EtherAppServer: OUTPUT: gate=out msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::SocketReq
inet.applications.ethernet.EtherAppServer: OUTPUT: gate=out msg=inet::Request kind=1 ctrl=inet::Ieee8022LlcSocketOpenCommand tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::SocketReq
inet.applications.ethernet.EtherAppServer: PACKET: insertAtBack inet::EtherAppResp
inet.applications.ethernet.EtherAppServer: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.ethernet.EtherAppServer: TAG: addTagIfAbsent inet::Ieee802SapReq
inet.applications.ethernet.EtherAppServer: TAG: addTagIfAbsent inet::MacAddressReq
inet.applications.ethernet.EtherAppServer: TAG: addTagIfAbsent inet::SocketReq
inet.applications.ethernet.EtherAppServer: TAG: getTag inet::Ieee802SapInd
inet.applications.ethernet.EtherAppServer: TAG: getTag inet::MacAddressInd
inet.applications.ethernet.EtherAppServer: TAG: getTag inet::SocketInd
inet.applications.ethernet.EtherTrafGen: INPUT: gate=in msg=inet::Packet kind=4 ctrl=<null> tags=inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SocketInd
inet.applications.ethernet.EtherTrafGen: OUTPUT: gate=out msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq
inet.applications.ethernet.EtherTrafGen: OUTPUT: gate=out msg=inet::Request kind=1 ctrl=inet::Ieee8022LlcSocketOpenCommand tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::SocketReq
inet.applications.ethernet.EtherTrafGen: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.ethernet.EtherTrafGen: SCHEDULE:  msg=omnetpp::cMessage kind=100 ctrl=<null> tags= msgname=generateNextPacket
inet.applications.ethernet.EtherTrafGen: SCHEDULE:  msg=omnetpp::cMessage kind=101 ctrl=<null> tags= msgname=generateNextPacket
inet.applications.ethernet.EtherTrafGen: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.ethernet.EtherTrafGen: TAG: addTagIfAbsent inet::Ieee802SapReq
inet.applications.ethernet.EtherTrafGen: TAG: addTagIfAbsent inet::SocketReq
inet.applications.ethernet.EtherTrafGen: TAG: addTag inet::DispatchProtocolReq
inet.applications.ethernet.EtherTrafGen: TAG: addTag inet::Ieee802SapReq
inet.applications.ethernet.EtherTrafGen: TAG: addTag inet::MacAddressReq
inet.applications.generic.IpvxTrafGen: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.generic.IpvxTrafGen: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.applications.generic.IpvxTrafGen: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.applications.generic.IpvxTrafGen: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.applications.generic.IpvxTrafGen: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.generic.IpvxTrafGen: SCHEDULE:  msg=omnetpp::cMessage kind=100 ctrl=<null> tags= msgname=sendTimer
inet.applications.generic.IpvxTrafGen: SCHEDULE:  msg=omnetpp::cMessage kind=101 ctrl=<null> tags= msgname=sendTimer
inet.applications.generic.IpvxTrafGen: TAG: addTag inet::DispatchProtocolReq
inet.applications.generic.IpvxTrafGen: TAG: addTag inet::L3AddressReq
inet.applications.generic.IpvxTrafGen: TAG: addTag inet::PacketProtocolTag
inet.applications.generic.IpvxTrafGen: TAG: findTag inet::Ipv4InterfaceData
inet.applications.generic.IpvxTrafGen: TAG: findTag inet::L3AddressReq
inet.applications.generic.IpvxTrafSink: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.applications.generic.IpvxTrafSink: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.applications.generic.IpvxTrafSink: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.applications.generic.IpvxTrafSink: TAG: findTag inet::L3AddressInd
inet.applications.generic.IpvxTrafSink: TAG: findTag inet::L3AddressReq
inet.applications.httptools.browser.HttpBrowser: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::getAnyServerInfo info=<nullptr>
inet.applications.httptools.browser.HttpBrowser: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::getServerInfo info=<nullptr>
inet.applications.httptools.browser.HttpBrowser: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::getServerModule info=<nullptr>
inet.applications.httptools.browser.HttpBrowser: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.httptools.browser.HttpBrowserDirect: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::getAnyServerModule info=<nullptr>
inet.applications.httptools.browser.HttpBrowserDirect: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::getServerModule info=<nullptr>
inet.applications.httptools.browser.HttpBrowserDirect: INPUT: gate=httpIn msg=inet::Packet kind=10010 ctrl=<null> tags=
inet.applications.httptools.browser.HttpBrowserDirect: OUTPUTDIRECT: msg=inet::Packet kind=10000 ctrl=<null> tags=
inet.applications.httptools.browser.HttpBrowserDirect: PACKET: insertAtBack inet::httptools::HttpRequestMessage
inet.applications.httptools.browser.HttpBrowserDirect: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowserDirect: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowserDirect: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowserDirect: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowser: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.httptools.browser.HttpBrowser: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.httptools.browser.HttpBrowser: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.httptools.browser.HttpBrowser: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.browser.HttpBrowser: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.browser.HttpBrowser: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.browser.HttpBrowser: PACKET: insertAtBack inet::httptools::HttpRequestMessage
inet.applications.httptools.browser.HttpBrowser: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowser: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowser: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowser: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=eventTimer
inet.applications.httptools.browser.HttpBrowser: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.httptools.browser.HttpBrowser: TAG: addTagIfAbsent inet::SocketReq
inet.applications.httptools.browser.HttpBrowser: TAG: findTag inet::Ipv4InterfaceData
inet.applications.httptools.browser.HttpBrowser: TAG: findTag inet::SocketInd
inet.applications.httptools.browser.HttpBrowser: TAG: getTag inet::SocketInd
inet.applications.httptools.configurator.HttpController: SCHEDULE:  msg=inet::httptools::HttpServerStatusUpdateMsg kind=0 ctrl=<null> tags= msgname=
inet.applications.httptools.server.HttpServer: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::registerServer info=<nullptr>
inet.applications.httptools.server.HttpServer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.httptools.server.HttpServerDirect: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::registerServer info=<nullptr>
inet.applications.httptools.server.HttpServerDirect: INPUT: gate=httpIn msg=inet::Packet kind=10000 ctrl=<null> tags=
inet.applications.httptools.server.HttpServerDirect: OUTPUTDIRECT: msg=inet::Packet kind=10010 ctrl=<null> tags=
inet.applications.httptools.server.HttpServerDirect: PACKET: insertAtBack inet::httptools::HttpReplyMessage
inet.applications.httptools.server.HttpServerEvilA: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::registerServer info=<nullptr>
inet.applications.httptools.server.HttpServerEvilA: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.httptools.server.HttpServerEvilA: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServerEvilA: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.httptools.server.HttpServerEvilA: TAG: addTagIfAbsent inet::SocketReq
inet.applications.httptools.server.HttpServerEvilB: CALL: module=inet.applications.httptools.configurator.HttpController func=inet::httptools::HttpController::registerServer info=<nullptr>
inet.applications.httptools.server.HttpServerEvilB: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.httptools.server.HttpServerEvilB: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServerEvilB: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.httptools.server.HttpServerEvilB: TAG: addTagIfAbsent inet::SocketReq
inet.applications.httptools.server.HttpServer: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.applications.httptools.server.HttpServer: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.httptools.server.HttpServer: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.httptools.server.HttpServer: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.httptools.server.HttpServer: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.httptools.server.HttpServer: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServer: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServer: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServer: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.httptools.server.HttpServer: PACKET: insertAtBack inet::httptools::HttpReplyMessage
inet.applications.httptools.server.HttpServer: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.httptools.server.HttpServer: TAG: addTagIfAbsent inet::SocketReq
inet.applications.httptools.server.HttpServer: TAG: findTag inet::SocketInd
inet.applications.httptools.server.HttpServer: TAG: getTag inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.netperfmeter.NetPerfMeter: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=14 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=15 ctrl=<null> tags=inet::SctpSendQueueAbatedReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=21 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=22 ctrl=<null> tags=inet::SctpAvailableReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=2 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=<null> tags=inet::SctpConnectReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SctpRcvReq,inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.netperfmeter.NetPerfMeter: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Packet kind=8 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Packet kind=9 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=12 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpInfoReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=22 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=25 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpAvailableReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=8 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CONNECT ctrl=inet::UdpConnectCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: PACKET: insertAtBack inet::BytesChunk
inet.applications.netperfmeter.NetPerfMeter: SCHEDULE:  msg=inet::NetPerfMeterTransmitTimer kind=5 ctrl=<null> tags= msgname=TransmitTimer
inet.applications.netperfmeter.NetPerfMeter: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=ConnectTimer
inet.applications.netperfmeter.NetPerfMeter: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=StartTimer
inet.applications.netperfmeter.NetPerfMeter: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=ResetTimer
inet.applications.netperfmeter.NetPerfMeter: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTagIfAbsent inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::DispatchProtocolReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::SctpAvailableReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::SctpInfoReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::SctpOpenReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::SctpSendReq
inet.applications.netperfmeter.NetPerfMeter: TAG: addTag inet::SocketReq
inet.applications.netperfmeter.NetPerfMeter: TAG: findTag inet::Ipv4InterfaceData
inet.applications.netperfmeter.NetPerfMeter: TAG: findTag inet::SctpConnectReq
inet.applications.netperfmeter.NetPerfMeter: TAG: findTag inet::SctpRcvReq
inet.applications.netperfmeter.NetPerfMeter: TAG: getTag inet::SctpAvailableReq
inet.applications.netperfmeter.NetPerfMeter: TAG: getTag inet::SctpCommandReq
inet.applications.netperfmeter.NetPerfMeter: TAG: getTag inet::SctpConnectReq
inet.applications.netperfmeter.NetPerfMeter: TAG: getTag inet::SctpSendQueueAbatedReq
inet.applications.netperfmeter.NetPerfMeter: TAG: getTag inet::SocketInd
inet.applications.pingapp.PingApp: CALL: module=inet.applications.pingapp.PingApp func=inet::PingApp::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.pingapp.PingApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc func=inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.pingapp.PingApp: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Indication kind=1 ctrl=inet::Ipv4SocketClosedIndication tags=inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::UserPriorityInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: INPUT: gate=socketIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.pingapp.PingApp: OUTPUT: gate=socketOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.applications.pingapp.PingApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::Ipv4SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.pingapp.PingApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::Ipv6SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.pingapp.PingApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.pingapp.PingApp: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::Ipv4SocketCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.pingapp.PingApp: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.pingapp.PingApp: PACKET: insertAtFront inet::EchoPacket
inet.applications.pingapp.PingApp: PACKET: insertAtFront inet::IcmpEchoRequest
inet.applications.pingapp.PingApp: PACKET: insertAtFront inet::Icmpv6EchoRequestMsg
inet.applications.pingapp.PingApp: PACKET: popAtFront inet::EchoPacket
inet.applications.pingapp.PingApp: PACKET: popAtFront inet::IcmpHeader
inet.applications.pingapp.PingApp: PACKET: popAtFront inet::Icmpv6Header
inet.applications.pingapp.PingApp: SCHEDULE:  msg=omnetpp::cMessage kind=1001 ctrl=<null> tags= msgname=sendPing
inet.applications.pingapp.PingApp: SCHEDULE:  msg=omnetpp::cMessage kind=1002 ctrl=<null> tags= msgname=sendPing
inet.applications.pingapp.PingApp: SCHEDULE:  msg=omnetpp::cMessage kind=1003 ctrl=<null> tags= msgname=sendPing
inet.applications.pingapp.PingApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.pingapp.PingApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.pingapp.PingApp: TAG: addTag inet::L3AddressReq
inet.applications.pingapp.PingApp: TAG: addTag inet::PacketProtocolTag
inet.applications.pingapp.PingApp: TAG: findTag inet::HopLimitInd
inet.applications.pingapp.PingApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.pingapp.PingApp: TAG: findTag inet::Ipv6InterfaceData
inet.applications.pingapp.PingApp: TAG: getTag inet::L3AddressInd
inet.applications.pingapp.PingApp: TAG: getTag inet::PacketProtocolTag
inet.applications.pingapp.PingApp: TAG: getTag inet::SocketInd
inet.applications.rtpapp.RtpApplication: INPUT: gate=rtpIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderModuleCreated tags=
inet.applications.rtpapp.RtpApplication: INPUT: gate=rtpIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderStatus tags=
inet.applications.rtpapp.RtpApplication: INPUT: gate=rtpIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSessionEntered tags=
inet.applications.rtpapp.RtpApplication: INPUT: gate=rtpIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSessionLeft tags=
inet.applications.rtpapp.RtpApplication: OUTPUT: gate=rtpOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiCreateSenderModule tags=
inet.applications.rtpapp.RtpApplication: OUTPUT: gate=rtpOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiEnterSession tags=
inet.applications.rtpapp.RtpApplication: OUTPUT: gate=rtpOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiLeaveSession tags=
inet.applications.rtpapp.RtpApplication: OUTPUT: gate=rtpOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderControl tags=
inet.applications.rtpapp.RtpApplication: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=enterSession
inet.applications.rtpapp.RtpApplication: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=startTransmission
inet.applications.rtpapp.RtpApplication: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=stopTransmission
inet.applications.rtpapp.RtpApplication: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=leaveSession
inet.applications.rtpapp.RtpApplication: TAG: findTag inet::Ipv4InterfaceData
inet.applications.sctpapp.SctpClient: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.sctpapp.SctpClient: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.sctpapp.SctpClient: INPUT: gate=socketIn msg=inet::Indication kind=12 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpClient: INPUT: gate=socketIn msg=inet::Indication kind=21 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpClient: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=<null> tags=inet::SctpConnectReq,inet::SocketInd
inet.applications.sctpapp.SctpClient: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Packet kind=3 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=13 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpInfoReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=14 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=22 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: OUTPUT: gate=socketOut msg=inet::Request kind=6 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.applications.sctpapp.SctpClient: PACKET: insertAtBack inet::BytesChunk
inet.applications.sctpapp.SctpClient: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=CliAppTimer
inet.applications.sctpapp.SctpClient: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=CliAppTimer
inet.applications.sctpapp.SctpClient: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=StopTimer
inet.applications.sctpapp.SctpClient: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.sctpapp.SctpClient: TAG: addTagIfAbsent inet::SocketReq
inet.applications.sctpapp.SctpClient: TAG: addTag inet::SctpCommandReq
inet.applications.sctpapp.SctpClient: TAG: addTag inet::SctpInfoReq
inet.applications.sctpapp.SctpClient: TAG: addTag inet::SctpOpenReq
inet.applications.sctpapp.SctpClient: TAG: addTag inet::SctpSendReq
inet.applications.sctpapp.SctpClient: TAG: findTag inet::Ipv4InterfaceData
inet.applications.sctpapp.SctpClient: TAG: findTag inet::Ipv6InterfaceData
inet.applications.sctpapp.SctpClient: TAG: findTag inet::SctpSendReq
inet.applications.sctpapp.SctpClient: TAG: getTag inet::SctpConnectReq
inet.applications.sctpapp.SctpClient: TAG: getTag inet::SocketInd
inet.applications.sctpapp.SctpServer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=10 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=13 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=21 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=22 ctrl=<null> tags=inet::SctpAvailableReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=2 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=<null> tags=inet::SctpConnectReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SctpRcvReq,inet::SocketInd
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=15 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=22 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=25 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpAvailableReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=6 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: OUTPUT: gate=socketOut msg=inet::Request kind=8 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.applications.sctpapp.SctpServer: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.sctpapp.SctpServer: TAG: addTagIfAbsent inet::SocketReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::DispatchProtocolReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::SctpAvailableReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::SctpCommandReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::SctpOpenReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::SctpSendReq
inet.applications.sctpapp.SctpServer: TAG: addTag inet::SocketReq
inet.applications.sctpapp.SctpServer: TAG: findTag inet::SctpCommandReq
inet.applications.sctpapp.SctpServer: TAG: findTag inet::SctpRcvReq
inet.applications.sctpapp.SctpServer: TAG: getTag inet::SctpAvailableReq
inet.applications.sctpapp.SctpServer: TAG: getTag inet::SctpConnectReq
inet.applications.sctpapp.SctpServer: TAG: getTag inet::SocketInd
inet.applications.tcpapp.TcpBasicClientApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TcpBasicClientApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpBasicClientApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpBasicClientApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TcpBasicClientApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpBasicClientApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpBasicClientApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpBasicClientApp: PACKET: insertAtBack inet::GenericAppMsg
inet.applications.tcpapp.TcpBasicClientApp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TcpBasicClientApp: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TcpBasicClientApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TcpBasicClientApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TcpBasicClientApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.tcpapp.TcpBasicClientApp: TAG: findTag inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpEchoApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.tcpapp.TcpEchoApp: PACKET: insertAtBack inet::BytesChunk
inet.applications.tcpapp.TcpEchoApp: PACKET: insertAtBack inet::SliceChunk
inet.applications.tcpapp.TcpEchoApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TcpEchoApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: TAG: addTag inet::SocketReq
inet.applications.tcpapp.TcpEchoApp: TAG: findTag inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: TAG: getTag inet::SocketInd
inet.applications.tcpapp.TcpEchoApp: TAG: getTag inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: PACKET: insertAtBack inet::GenericAppMsg
inet.applications.tcpapp.TcpGenericServerApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TcpGenericServerApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: TAG: addTag inet::SocketReq
inet.applications.tcpapp.TcpGenericServerApp: TAG: findTag inet::SocketInd
inet.applications.tcpapp.TcpGenericServerApp: TAG: getTag inet::SocketInd
inet.applications.tcpapp.TcpSessionApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TcpSessionApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TcpSessionApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TcpSessionApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSessionApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSessionApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSessionApp: PACKET: insertAtBack inet::ApplicationPacket
inet.applications.tcpapp.TcpSessionApp: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.tcpapp.TcpSessionApp: PACKET: insertAtBack inet::BytesChunk
inet.applications.tcpapp.TcpSessionApp: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TcpSessionApp: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TcpSessionApp: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TcpSessionApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TcpSessionApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TcpSessionApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.tcpapp.TcpSessionApp: TAG: findTag inet::Ipv6InterfaceData
inet.applications.tcpapp.TcpSessionApp: TAG: findTag inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TcpSinkApp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: INPUT: gate=socketIn msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSinkApp: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSinkApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TcpSinkApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TcpSinkApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TcpSinkApp: TAG: findTag inet::SocketInd
inet.applications.tcpapp.TcpSinkApp: TAG: getTag inet::SocketInd
inet.applications.tcpapp.TelnetApp: CALL: module=inet.applications.tcpapp.TelnetApp func=inet::TelnetApp::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.tcpapp.TelnetApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tcpapp.TelnetApp: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.tcpapp.TelnetApp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.tcpapp.TelnetApp: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.tcpapp.TelnetApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.applications.tcpapp.TelnetApp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.applications.tcpapp.TelnetApp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.applications.tcpapp.TelnetApp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.applications.tcpapp.TelnetApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TelnetApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TelnetApp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tcpapp.TelnetApp: PACKET: insertAtBack inet::GenericAppMsg
inet.applications.tcpapp.TelnetApp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TelnetApp: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TelnetApp: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=timer
inet.applications.tcpapp.TelnetApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tcpapp.TelnetApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tcpapp.TelnetApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.tcpapp.TelnetApp: TAG: findTag inet::Ipv6InterfaceData
inet.applications.tcpapp.TelnetApp: TAG: findTag inet::SocketInd
inet.applications.tunapp.TunnelApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.tunapp.TunnelApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.applications.tunapp.TunnelApp: INPUT: gate=socketIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::InterfaceInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.applications.tunapp.TunnelApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.tunapp.TunnelApp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::InterfaceReq,inet::SocketReq
inet.applications.tunapp.TunnelApp: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tunapp.TunnelApp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TunOpenCommand tags=inet::InterfaceReq,inet::SocketReq
inet.applications.tunapp.TunnelApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tunapp.TunnelApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CONNECT ctrl=inet::UdpConnectCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.tunapp.TunnelApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.tunapp.TunnelApp: TAG: addTagIfAbsent inet::InterfaceReq
inet.applications.tunapp.TunnelApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.tunapp.TunnelApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.tunapp.TunnelApp: TAG: findTag inet::SocketInd
inet.applications.tunapp.TunnelApp: TAG: getTag inet::SocketInd
inet.applications.tunapp.TunnelApp: TAG: getTag inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.applications.udpapp.UdpBasicApp func=inet::UdpBasicApp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicApp: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.udpapp.UdpBasicApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpBasicApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpBasicApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpBasicApp: PACKET: insertAtBack inet::ApplicationPacket
inet.applications.udpapp.UdpBasicApp: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=sendTimer
inet.applications.udpapp.UdpBasicApp: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=sendTimer
inet.applications.udpapp.UdpBasicApp: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=sendTimer
inet.applications.udpapp.UdpBasicApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpBasicApp: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.udpapp.UdpBasicApp: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.udpapp.UdpBasicApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpBasicApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.udpapp.UdpBasicApp: TAG: findTag inet::Ipv6InterfaceData
inet.applications.udpapp.UdpBasicApp: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.applications.udpapp.UdpBasicBurst func=inet::UdpBasicBurst::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpBasicBurst: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.applications.udpapp.UdpBasicBurst: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.udpapp.UdpBasicBurst: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicBurst: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpBasicBurst: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.udpapp.UdpBasicBurst: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpBasicBurst: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpBasicBurst: PACKET: insertAtBack inet::ApplicationPacket
inet.applications.udpapp.UdpBasicBurst: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=UDPBasicBurstTimer
inet.applications.udpapp.UdpBasicBurst: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=UDPBasicBurstTimer
inet.applications.udpapp.UdpBasicBurst: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=UDPBasicBurstTimer
inet.applications.udpapp.UdpBasicBurst: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpBasicBurst: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.udpapp.UdpBasicBurst: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.udpapp.UdpBasicBurst: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpBasicBurst: TAG: findTag inet::Ipv4InterfaceData
inet.applications.udpapp.UdpBasicBurst: TAG: findTag inet::NextHopInterfaceData
inet.applications.udpapp.UdpBasicBurst: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpEchoApp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpEchoApp: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpEchoApp: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.udpapp.UdpEchoApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpEchoApp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpEchoApp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpEchoApp: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.udpapp.UdpEchoApp: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.udpapp.UdpEchoApp: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpEchoApp: TAG: findTag inet::Ipv4InterfaceData
inet.applications.udpapp.UdpEchoApp: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpEchoApp: TAG: getTag inet::L3AddressInd
inet.applications.udpapp.UdpEchoApp: TAG: getTag inet::L4PortInd
inet.applications.udpapp.UdpSink: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpSink: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpSink: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpSink: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpSink: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpSink: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpLeaveMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpSink: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetBroadcastCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpSink: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=UDPSinkTimer
inet.applications.udpapp.UdpSink: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=UDPSinkTimer
inet.applications.udpapp.UdpSink: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpSink: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpSink: TAG: findTag inet::Ipv4InterfaceData
inet.applications.udpapp.UdpSink: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.applications.udpapp.UdpVideoStreamClient func=inet::UdpVideoStreamClient::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.applications.udpapp.UdpVideoStreamClient: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.applications.udpapp.UdpVideoStreamClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpVideoStreamClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpVideoStreamClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpVideoStreamClient: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpVideoStreamClient: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.udpapp.UdpVideoStreamClient: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpVideoStreamClient: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpVideoStreamClient: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.udpapp.UdpVideoStreamClient: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=UDPVideoStreamStart
inet.applications.udpapp.UdpVideoStreamClient: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpVideoStreamClient: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.udpapp.UdpVideoStreamClient: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.udpapp.UdpVideoStreamClient: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpVideoStreamClient: TAG: findTag inet::Ipv4InterfaceData
inet.applications.udpapp.UdpVideoStreamClient: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpVideoStreamServer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.udpapp.UdpVideoStreamServer: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.applications.udpapp.UdpVideoStreamServer: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.applications.udpapp.UdpVideoStreamServer: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpVideoStreamServer: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.udpapp.UdpVideoStreamServer: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.udpapp.UdpVideoStreamServer: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.udpapp.UdpVideoStreamServer: PACKET: insertAtBack inet::ByteCountChunk
inet.applications.udpapp.UdpVideoStreamServer: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=VideoStreamTmr
inet.applications.udpapp.UdpVideoStreamServer: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.udpapp.UdpVideoStreamServer: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.udpapp.UdpVideoStreamServer: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.udpapp.UdpVideoStreamServer: TAG: addTagIfAbsent inet::SocketReq
inet.applications.udpapp.UdpVideoStreamServer: TAG: findTag inet::SocketInd
inet.applications.udpapp.UdpVideoStreamServer: TAG: getTag inet::L3AddressInd
inet.applications.udpapp.UdpVideoStreamServer: TAG: getTag inet::L4PortInd
inet.applications.voip.SimpleVoipReceiver: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.voip.SimpleVoipReceiver: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.voip.SimpleVoipReceiver: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.voip.SimpleVoipReceiver: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=selfTalkspurtFinished
inet.applications.voip.SimpleVoipReceiver: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.voip.SimpleVoipReceiver: TAG: addTagIfAbsent inet::SocketReq
inet.applications.voip.SimpleVoipReceiver: TAG: findTag inet::SocketInd
inet.applications.voip.SimpleVoipSender: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.voip.SimpleVoipSender: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.voip.SimpleVoipSender: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.voip.SimpleVoipSender: PACKET: insertAtBack inet::SimpleVoipPacket
inet.applications.voip.SimpleVoipSender: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=selfSender
inet.applications.voip.SimpleVoipSender: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=selfSource
inet.applications.voip.SimpleVoipSender: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.voip.SimpleVoipSender: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.voip.SimpleVoipSender: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.voip.SimpleVoipSender: TAG: addTagIfAbsent inet::SocketReq
inet.applications.voip.SimpleVoipSender: TAG: findTag inet::Ipv4InterfaceData
inet.applications.voipstream.VoipStreamReceiver: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.voipstream.VoipStreamReceiver: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.voipstream.VoipStreamReceiver: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.applications.voipstream.VoipStreamReceiver: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.voipstream.VoipStreamReceiver: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.voipstream.VoipStreamReceiver: TAG: addTagIfAbsent inet::SocketReq
inet.applications.voipstream.VoipStreamReceiver: TAG: findTag inet::SocketInd
inet.applications.voipstream.VoipStreamReceiver: TAG: getTag inet::L3AddressInd
inet.applications.voipstream.VoipStreamReceiver: TAG: getTag inet::L4PortInd
inet.applications.voipstream.VoipStreamSender: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.applications.voipstream.VoipStreamSender: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.applications.voipstream.VoipStreamSender: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.applications.voipstream.VoipStreamSender: PACKET: insertAtBack inet::VoipStreamPacket
inet.applications.voipstream.VoipStreamSender: SCHEDULE:  msg=inet::Packet kind=0 ctrl=<null> tags= msgname=SILENCE
inet.applications.voipstream.VoipStreamSender: SCHEDULE:  msg=inet::Packet kind=0 ctrl=<null> tags= msgname=VOICE
inet.applications.voipstream.VoipStreamSender: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=sendVoIP
inet.applications.voipstream.VoipStreamSender: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.applications.voipstream.VoipStreamSender: TAG: addTagIfAbsent inet::L3AddressReq
inet.applications.voipstream.VoipStreamSender: TAG: addTagIfAbsent inet::L4PortReq
inet.applications.voipstream.VoipStreamSender: TAG: addTagIfAbsent inet::SocketReq
inet.applications.voipstream.VoipStreamSender: TAG: findTag inet::Ipv4InterfaceData
inet.common.MessageDispatcher: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.common.MessageDispatcher: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.common.MessageDispatcher: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.linklayer.common.ExampleQosClassifier func=inet::ExampleQosClassifier::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.linklayer.common.QosClassifier func=inet::QosClassifier::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.flooding.Flooding func=inet::Flooding::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.flooding.Flooding func=inet::Flooding::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.icmpv6.Icmpv6 func=inet::Icmpv6::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.icmpv6.Icmpv6 func=inet::Icmpv6::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Icmp func=inet::Icmp::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Icmp func=inet::Icmp::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.mpls.Mpls func=inet::Mpls::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.mpls.Mpls func=inet::Mpls::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast func=inet::AdaptiveProbabilisticBroadcast::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast func=inet::AdaptiveProbabilisticBroadcast::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.probabilistic.ProbabilisticBroadcast func=inet::ProbabilisticBroadcast::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.probabilistic.ProbabilisticBroadcast func=inet::ProbabilisticBroadcast::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: CALL: module=inet.networklayer.wiseroute.WiseRoute func=inet::WiseRoute::handleRegisterProtocol info=handleRegisterProtocol
inet.common.MessageDispatcher: CALL: module=inet.networklayer.wiseroute.WiseRoute func=inet::WiseRoute::handleRegisterService info=handleRegisterService
inet.common.MessageDispatcher: TAG: findTag inet::DispatchProtocolReq
inet.common.MessageDispatcher: TAG: findTag inet::InterfaceReq
inet.common.MessageDispatcher: TAG: findTag inet::PacketProtocolTag
inet.common.MessageDispatcher: TAG: findTag inet::SocketInd
inet.common.MessageDispatcher: TAG: findTag inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Request kind=11 ctrl=inet::TcpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: INPUT: gate=in msg=inet::Request kind=6 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Request kind=11 ctrl=inet::TcpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.misc.MessageChecker: OUTPUT: gate=out msg=inet::Request kind=6 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.common.packet.recorder.PcapRecorder: PACKET: insertAtFront inet::EthernetMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtBack inet::CsmaCaMacTrailer
inet.common.packet.recorder.PcapRecorder: PACKET: popAtBack inet::EthernetFcs
inet.common.packet.recorder.PcapRecorder: PACKET: popAtBack inet::ieee80211::Ieee80211MacTrailer
inet.common.packet.recorder.PcapRecorder: PACKET: popAtBack inet::PppTrailer
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::AckingMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::ArpPacket
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::BMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::CsmaCaMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::EthernetMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::IcmpHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::Icmpv6Header
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::ieee80211::Ieee80211MacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::Ieee802154MacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::Ieee8022LlcHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::Ipv4Header
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::Ipv6Header
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::LMacHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::PppHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::sctp::SctpHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::tcp::TcpHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::UdpHeader
inet.common.packet.recorder.PcapRecorder: PACKET: popAtFront inet::XMacHeader
inet.common.packet.recorder.PcapRecorder: TAG: findTag inet::ieee80211::LlcProtocolTag
inet.common.packet.recorder.PcapRecorder: TAG: findTag inet::L3AddressInd
inet.common.packet.recorder.PcapRecorder: TAG: findTag inet::NetworkProtocolInd
inet.common.packet.recorder.PcapRecorder: TAG: findTag inet::PacketProtocolTag
inet.common.packet.recorder.PcapRecorder: TAG: findTag inet::physicallayer::Ieee80211ChannelInd
inet.common.packet.recorder.PcapRecorder: TAG: getTag inet::PacketProtocolTag
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.dhcp.DhcpClient func=inet::DhcpClient::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.dhcp.DhcpServer func=inet::DhcpServer::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.pingapp.PingApp func=inet::PingApp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.tcpapp.TelnetApp func=inet::TelnetApp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.udpapp.UdpBasicApp func=inet::UdpBasicApp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.udpapp.UdpBasicBurst func=inet::UdpBasicBurst::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.applications.udpapp.UdpVideoStreamClient func=inet::UdpVideoStreamClient::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.configurator.L2NodeConfigurator func=inet::L2NodeConfigurator::handleOperationStage info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherBus func=inet::EtherBus::receiveSignal info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherHub func=inet::EtherHub::receiveSignal info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc func=inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee8021d.relay.Ieee8021dRelay func=inet::Ieee8021dRelay::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee8021d.rstp.Rstp func=inet::Rstp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ieee8021d.stp.Stp func=inet::Stp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ppp.Ppp func=inet::Ppp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.linklayer.ppp.Ppp func=inet::Ppp::refreshOutGateConnection info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.arp.ipv4.GlobalArp func=inet::GlobalArp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.ldp.Ldp func=inet::Ldp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.rsvpte.RsvpTe func=inet::RsvpTe::addSession info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.rsvpte.RsvpTe func=inet::RsvpTe::delSession info=<nullptr>
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.rsvpte.RsvpTe func=inet::RsvpTe::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.networklayer.ted.Ted func=inet::Ted::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.dsdv.Dsdv func=inet::Dsdv::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.ospfv2.Ospfv2 func=inet::ospfv2::Ospfv2::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.routing.rip.Rip func=inet::Rip::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.common.scenario.ScenarioManager: SCHEDULE:  msg=inet::ScenarioTimer kind=0 ctrl=<null> tags= msgname=scenario-event
inet.common.scenario.ScenarioManager: TAG: findTag inet::Ipv4InterfaceData
inet.linklayer.acking.AckingMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::acked info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.acking.AckingMac: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::receiveSignal info=receiveChangeNotification
inet.linklayer.acking.AckingMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.acking.AckingMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.acking.AckingMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.acking.AckingMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.acking.AckingMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.acking.AckingMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.acking.AckingMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.acking.AckingMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.acking.AckingMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.acking.AckingMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.acking.AckingMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: PACKET: insertAtFront inet::AckingMacHeader
inet.linklayer.acking.AckingMac: PACKET: popAtFront inet::AckingMacHeader
inet.linklayer.acking.AckingMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=link-break
inet.linklayer.acking.AckingMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.acking.AckingMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.acking.AckingMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.acking.AckingMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.acking.AckingMac: TAG: getTag inet::MacAddressReq
inet.linklayer.acking.AckingMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.acking.AckingWirelessInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.acking.AckingWirelessInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.acking.AckingWirelessInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.bmac.BMac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.bmac.BMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.bmac.BMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.bmac.BMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.bmac.BMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.bmac.BMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.bmac.BMacInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.bmac.BMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.bmac.BMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.bmac.BMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.bmac.BMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.bmac.BMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.bmac.BMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.bmac.BMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.bmac.BMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.bmac.BMac: PACKET: insertAtFront inet::BMacHeader
inet.linklayer.bmac.BMac: PACKET: popAtFront inet::BMacHeader
inet.linklayer.bmac.BMac: SCHEDULE:  msg=inet::Packet kind=inet::BMacType::BMAC_DATA ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd msgname=pingNN
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_CCA_TIMEOUT ctrl=<null> tags= msgname=cca_timeout
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_DATA_TIMEOUT ctrl=<null> tags= msgname=data_timeout
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_DATA_TX_OVER ctrl=<null> tags= msgname=data_tx_over
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_SEND_PREAMBLE ctrl=<null> tags= msgname=send_preamble
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_START_BMAC ctrl=<null> tags= msgname=start_bmac
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_STOP_PREAMBLES ctrl=<null> tags= msgname=stop_preambles
inet.linklayer.bmac.BMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::BMacType::BMAC_WAKE_UP ctrl=<null> tags= msgname=wakeup
inet.linklayer.bmac.BMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.bmac.BMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.bmac.BMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.bmac.BMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.bmac.BMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.bmac.BMac: TAG: getTag inet::MacAddressReq
inet.linklayer.bmac.BMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.common.ExampleQosClassifier: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.common.ExampleQosClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.common.ExampleQosClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.common.ExampleQosClassifier: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq
inet.linklayer.common.ExampleQosClassifier: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq
inet.linklayer.common.ExampleQosClassifier: TAG: addTagIfAbsent inet::UserPriorityReq
inet.linklayer.common.ExampleQosClassifier: TAG: getTag inet::PacketProtocolTag
inet.linklayer.common.QosClassifier: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.common.QosClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.common.QosClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.common.QosClassifier: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq
inet.linklayer.common.QosClassifier: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq
inet.linklayer.common.QosClassifier: TAG: addTagIfAbsent inet::UserPriorityReq
inet.linklayer.common.QosClassifier: TAG: getTag inet::PacketProtocolTag
inet.linklayer.common.WirelessInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.common.WirelessInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.common.WirelessInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.configurator.L2NodeConfigurator: TAG: addTag inet::Ieee8021dInterfaceData
inet.linklayer.csmaca.CsmaCaInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.csmaca.CsmaCaInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.csmaca.CsmaCaInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.csmaca.CsmaCaMac: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::receiveSignal info=receiveChangeNotification
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.csmaca.CsmaCaMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.linklayer.csmaca.CsmaCaMac: PACKET: insertAtBack inet::CsmaCaMacTrailer
inet.linklayer.csmaca.CsmaCaMac: PACKET: insertAtFront inet::CsmaCaMacAckHeader
inet.linklayer.csmaca.CsmaCaMac: PACKET: insertAtFront inet::CsmaCaMacDataHeader
inet.linklayer.csmaca.CsmaCaMac: PACKET: popAtFront inet::CsmaCaMacDataHeader
inet.linklayer.csmaca.CsmaCaMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=AckTimeout
inet.linklayer.csmaca.CsmaCaMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=Backoff
inet.linklayer.csmaca.CsmaCaMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=DIFS
inet.linklayer.csmaca.CsmaCaMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=SIFS
inet.linklayer.csmaca.CsmaCaMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.csmaca.CsmaCaMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.csmaca.CsmaCaMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.csmaca.CsmaCaMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: TAG: addTagIfAbsent inet::UserPriorityInd
inet.linklayer.csmaca.CsmaCaMac: TAG: addTag inet::MacAddressInd
inet.linklayer.csmaca.CsmaCaMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.csmaca.CsmaCaMac: TAG: findTag inet::UserPriorityReq
inet.linklayer.csmaca.CsmaCaMac: TAG: getTag inet::MacAddressReq
inet.linklayer.csmaca.CsmaCaMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.ethernet.EtherBus: INPUT: gate=ethg$i[] msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: INPUT: gate=ethg$i[] msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: INPUT: gate=ethg$i[] msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetFilledIfgSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetJamSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: OUTPUT: gate=ethg$o[] msg=inet::EthernetSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags= msgname=FilledIFG
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetFilledIfgSignal kind=1 ctrl=<null> tags= msgname=FilledIFG
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags= msgname=JAM_SIGNAL
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetJamSignal kind=1 ctrl=<null> tags= msgname=JAM_SIGNAL
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=arpREPLY
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=arpREQ
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=pk-NN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=pk-NN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=pk-NN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=pk-NN-NNNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-NN-resp-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-NNN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-NN-resp-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNNN-N-resp-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-NNN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNNN-N-resp-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NNN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=req-NN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=SYN+ACK
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=TcpAck
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=0 ctrl=<null> tags= msgname=tcpseg(l=NNN)
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=arpREPLY
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=arpREQ
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=pk-NN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=pk-NN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=pk-NN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=pk-NN-NNNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-NNN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNNNN-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNNNN-NN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-NNN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-NNN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-NN-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NNN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=req-NN-N-resp-N
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=SYN
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=SYN+ACK
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=TcpAck
inet.linklayer.ethernet.EtherBus: SCHEDULE:  msg=inet::EthernetSignal kind=1 ctrl=<null> tags= msgname=tcpseg(l=NNN)
inet.linklayer.ethernet.EtherEncap: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ethernet.EtherEncap: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ethernet.EtherEncap: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::EthernetBindCommand tags=inet::InterfaceReq,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::Ieee8022LlcSocketOpenCommand tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SocketInd,inet::VlanInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SocketInd
inet.linklayer.ethernet.EtherEncap: PACKET: insertAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherEncap: PACKET: insertAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherEncap: PACKET: insertAtFront inet::Ieee8022LlcHeader
inet.linklayer.ethernet.EtherEncap: PACKET: popAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherEncap: PACKET: popAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherEncap: PACKET: popAtFront inet::Ieee8022LlcHeader
inet.linklayer.ethernet.EtherEncap: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ethernet.EtherEncap: TAG: addTagIfAbsent inet::Ieee802SapInd
inet.linklayer.ethernet.EtherEncap: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ethernet.EtherEncap: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: TAG: addTagIfAbsent inet::SocketInd
inet.linklayer.ethernet.EtherEncap: TAG: findTag inet::Ieee802SapInd
inet.linklayer.ethernet.EtherEncap: TAG: findTag inet::PacketProtocolTag
inet.linklayer.ethernet.EtherEncap: TAG: getTag inet::Ieee802SapReq
inet.linklayer.ethernet.EtherEncap: TAG: getTag inet::MacAddressReq
inet.linklayer.ethernet.EtherEncap: TAG: getTag inet::SocketReq
inet.linklayer.ethernet.EtherEncap: TAG: getTag inet::VlanInd
inet.linklayer.ethernet.EtherFrameClassifier: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherFrameClassifier: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherHub: INPUT: gate=ethg$i[] msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: INPUT: gate=ethg$i[] msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: INPUT: gate=ethg$i[] msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: INPUT: gate=ethg$i[] msg=inet::EthernetSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: OUTPUT: gate=ethg$o[] msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: OUTPUT: gate=ethg$o[] msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: OUTPUT: gate=ethg$o[] msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherHub: OUTPUT: gate=ethg$o[] msg=inet::EthernetSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ethernet.EtherMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherMac: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherMac: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::refreshConnection info=<nullptr>
inet.linklayer.ethernet.EtherMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.applications.tcpapp.TelnetApp func=inet::TelnetApp::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::refreshConnection info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=phys$i msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=phys$i msg=inet::EthernetSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::VlanInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: INPUT: gate=upperLayerIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=phys$o msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: insertAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: insertAtBack inet::EthernetPadding
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: insertAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: insertAtFront inet::EthernetPhyHeader
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: popAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: popAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherMacFullDuplex: PACKET: popAtFront inet::EthernetPhyHeader
inet.linklayer.ethernet.EtherMacFullDuplex: SCHEDULE:  msg=omnetpp::cMessage kind=100 ctrl=<null> tags= msgname=EndIFG
inet.linklayer.ethernet.EtherMacFullDuplex: SCHEDULE:  msg=omnetpp::cMessage kind=103 ctrl=<null> tags= msgname=EndTransmission
inet.linklayer.ethernet.EtherMacFullDuplex: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ethernet.EtherMacFullDuplex: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ethernet.EtherMacFullDuplex: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMacFullDuplex: TAG: removeTag inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetFilledIfgSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetJamSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=phys$i msg=inet::EthernetSignal kind=1 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ethernet.EtherMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: OUTPUT: gate=phys$o msg=inet::EthernetFilledIfgSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: OUTPUT: gate=phys$o msg=inet::EthernetJamSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: OUTPUT: gate=phys$o msg=inet::EthernetSignal kind=0 ctrl=<null> tags=
inet.linklayer.ethernet.EtherMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: PACKET: insertAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherMac: PACKET: insertAtBack inet::EthernetPadding
inet.linklayer.ethernet.EtherMac: PACKET: insertAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherMac: PACKET: insertAtFront inet::EthernetPhyHeader
inet.linklayer.ethernet.EtherMac: PACKET: popAtBack inet::EthernetFcs
inet.linklayer.ethernet.EtherMac: PACKET: popAtFront inet::EthernetMacHeader
inet.linklayer.ethernet.EtherMac: PACKET: popAtFront inet::EthernetPhyHeader
inet.linklayer.ethernet.EtherMac: SCHEDULE:  msg=omnetpp::cMessage kind=100 ctrl=<null> tags= msgname=EndIFG
inet.linklayer.ethernet.EtherMac: SCHEDULE:  msg=omnetpp::cMessage kind=101 ctrl=<null> tags= msgname=EndReception
inet.linklayer.ethernet.EtherMac: SCHEDULE:  msg=omnetpp::cMessage kind=102 ctrl=<null> tags= msgname=EndBackoff
inet.linklayer.ethernet.EtherMac: SCHEDULE:  msg=omnetpp::cMessage kind=103 ctrl=<null> tags= msgname=EndTransmission
inet.linklayer.ethernet.EtherMac: SCHEDULE:  msg=omnetpp::cMessage kind=104 ctrl=<null> tags= msgname=EndJamming
inet.linklayer.ethernet.EtherMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ethernet.EtherMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ethernet.EtherMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ethernet.EtherMac: TAG: removeTag inet::PacketProtocolTag
inet.linklayer.ethernet.EthernetInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.ethernet.EthernetInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ethernet.EthernetInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ethernet.EthernetInterface: TAG: addTag inet::Ieee8021dInterfaceData
inet.linklayer.ethernet.EthernetInterface: TAG: getTag inet::Ieee8021dInterfaceData
inet.linklayer.ethernet.EtherQosQueue: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherQosQueue: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherQueue: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.linklayer.ethernet.EtherQueue: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.linklayer.ethernet.switch.MacAddressTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ethernet.switch.MacRelayUnit: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ethernet.switch.MacRelayUnit: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ethernet.switch.MacRelayUnit: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.linklayer.ethernet.switch.MacRelayUnit: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::getInterfaceIdForAddress info=MacAddressTable::getPortForAddress()
inet.linklayer.ethernet.switch.MacRelayUnit: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::updateTableWithAddress info=MacAddressTable::updateTableWithAddress()
inet.linklayer.ethernet.switch.MacRelayUnit: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ethernet.switch.MacRelayUnit: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.switch.MacRelayUnit: INPUT: gate=ifIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ethernet.switch.MacRelayUnit: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.switch.MacRelayUnit: OUTPUT: gate=ifOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ethernet.switch.MacRelayUnit: TAG: addTagIfAbsent inet::InterfaceReq
inet.linklayer.ethernet.switch.MacRelayUnit: TAG: addTag inet::InterfaceReq
inet.linklayer.ethernet.switch.MacRelayUnit: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ethernet.switch.MacRelayUnit: TAG: getTag inet::InterfaceInd
inet.linklayer.ethernet.switch.MacRelayUnit: TAG: removeTag inet::PacketProtocolTag
inet.linklayer.ieee80211.Ieee80211Interface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.ieee80211.Ieee80211Interface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ieee80211.Ieee80211Interface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=lowerLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::SocketReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::Ieee8022LlcSocketOpenCommand tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::SocketReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::SocketInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: PACKET: insertAtFront inet::Ieee8022LlcHeader
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: PACKET: insertAtFront inet::Ieee8022LlcSnapHeader
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: PACKET: popAtFront inet::Ieee8022LlcHeader
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: addTagIfAbsent inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: addTagIfAbsent inet::Ieee802SapInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: addTagIfAbsent inet::SocketInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: findTag inet::Ieee802SapInd
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: findTag inet::PacketProtocolTag
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: getTag inet::Ieee802SapReq
inet.linklayer.ieee80211.llc.Ieee80211LlcLpd: TAG: getTag inet::SocketReq
inet.linklayer.ieee80211.mac.channelaccess.Dcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium BUSY
inet.linklayer.ieee80211.mac.channelaccess.Dcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium FREE
inet.linklayer.ieee80211.mac.channelaccess.Dcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::startContention info=startContention
inet.linklayer.ieee80211.mac.channelaccess.Dcaf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::channelGranted info=channelGranted
inet.linklayer.ieee80211.mac.channelaccess.Edcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium BUSY
inet.linklayer.ieee80211.mac.channelaccess.Edcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium FREE
inet.linklayer.ieee80211.mac.channelaccess.Edcaf: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::startContention info=startContention
inet.linklayer.ieee80211.mac.channelaccess.Edcaf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::channelGranted info=channelGranted
inet.linklayer.ieee80211.mac.contention.Contention: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::channelAccessGranted info=channelAccessGranted
inet.linklayer.ieee80211.mac.contention.Contention: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::channelAccessGranted info=channelAccessGranted
inet.linklayer.ieee80211.mac.contention.Contention: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=channelGranted
inet.linklayer.ieee80211.mac.contention.Contention: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=startTx
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::incrementCw info=incrementCw
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::releaseChannel info=releaseChannel
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::requestChannel info=requestChannel
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::resetCw info=resetCw
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::frameSequenceFinished info=frameSequenceFinished
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::originatorProcessFailedFrame info=originatorProcessFailedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::originatorProcessReceivedFrame info=originatorProcessReceivedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::originatorProcessRtsProtectionFailed info=originatorProcessRtsProtectionFailed
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::originatorProcessTransmittedFrame info=originatorProcessTransmittedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::scheduleStartRxTimer info=<nullptr>
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::transmitControlResponseFrame info=transmitControlResponseFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::transmitFrame info=transmitFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy func=inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes info=computeFragmentSizes
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::sendUpFrame info=sendUpFrame("%s")
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl func=inet::ieee80211::AarfRateControl::getRate info=getRate
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.linklayer.ieee80211.mac.Tx func=inet::ieee80211::Tx::transmitFrame info=transmitFrame("%s")
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::receiveSignal info=receiveChangeNotification
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::receiveSignal info=receiveChangeNotification
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::receiveSignal info=receiveChangeNotification
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtBack inet::ByteCountChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtBack inet::ieee80211::Ieee80211RtsFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtBack inet::SequenceChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtBack inet::SliceChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtFront inet::ieee80211::Ieee80211MgmtHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: insertAtFront inet::ieee80211::Ieee80211RtsFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: popAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: popAtFront inet::ieee80211::Ieee80211DataOrMgmtHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: PACKET: popAtFront inet::ieee80211::Ieee80211MacHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=startRxTimeout
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: TAG: findTag inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.coordinationfunction.Dcf: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy func=inet::ieee80211::BasicMsduAggregationPolicy::computeAggregateFrames info=computeAggregateFrames
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::incrementCw info=incrementCw
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::releaseChannel info=releaseChannel
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::requestChannel info=requestChannel
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::resetCw info=resetCw
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::frameSequenceFinished info=frameSequenceFinished
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::originatorProcessFailedFrame info=originatorProcessFailedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::originatorProcessReceivedFrame info=originatorProcessReceivedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::originatorProcessRtsProtectionFailed info=originatorProcessRtsProtectionFailed
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::originatorProcessTransmittedFrame info=originatorProcessTransmittedFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::processMgmtFrame info=processMgmtFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::processUpperFrame info=processUpperFrame(%s)
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::scheduleStartRxTimer info=<nullptr>
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::transmitControlResponseFrame info=transmitControlResponseFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::transmitFrame info=transmitFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy func=inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes info=computeFragmentSizes
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::sendUpFrame info=sendUpFrame("%s")
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.originator.TxopProcedure func=inet::ieee80211::TxopProcedure::endTxop info=endTxop
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.originator.TxopProcedure func=inet::ieee80211::TxopProcedure::startTxop info=startTxop
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: CALL: module=inet.linklayer.ieee80211.mac.Tx func=inet::ieee80211::Tx::transmitFrame info=transmitFrame("%s")
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::ByteCountChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::ieee80211::Ieee80211MsduSubframeHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::ieee80211::Ieee80211RtsFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::SequenceChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtBack inet::SliceChunk
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211AddbaRequest
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211AddbaResponse
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211BasicBlockAckReq
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211MgmtHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: insertAtFront inet::ieee80211::Ieee80211RtsFrame
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: popAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: popAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: popAtFront inet::ieee80211::Ieee80211DataOrMgmtHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: popAtFront inet::ieee80211::Ieee80211MacHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: PACKET: popAtFront inet::ieee80211::Ieee80211MsduSubframeHeader
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=startRxTimeout
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: TAG: findTag inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.coordinationfunction.Hcf: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ds: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::processUpperFrame info=processUpperFrame("%s")
inet.linklayer.ieee80211.mac.Ds: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::sendUp info=sendUp("%s")
inet.linklayer.ieee80211.mac.Ds: PACKET: insertAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.Ds: PACKET: insertAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.blockack.OriginatorBlockAckAgreementPolicy func=inet::ieee80211::OriginatorBlockAckAgreementPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Dcaf func=inet::ieee80211::Dcaf::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.channelaccess.Edcaf func=inet::ieee80211::Edcaf::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::corruptedFrameReceived info=corruptedFrameReceived
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::processLowerFrame info=processLowerFrame(%s)
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::processUpperFrame info=processUpperFrame(%s)
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::corruptedFrameReceived info=corruptedFrameReceived
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::processLowerFrame info=processLowerFrame(%s)
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::processUpperFrame info=processUpperFrame(%s)
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Ds func=inet::ieee80211::Ds::processDataFrame info=processDataFrame
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::processLowerFrame info=processLowerFrame("%s")
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::processUpperFrame info=processUpperFrame("%s")
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.originator.OriginatorAckPolicy func=inet::ieee80211::OriginatorAckPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.originator.OriginatorQosAckPolicy func=inet::ieee80211::OriginatorQosAckPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.originator.QosRtsPolicy func=inet::ieee80211::QosRtsPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.originator.RtsPolicy func=inet::ieee80211::RtsPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.originator.TxopProcedure func=inet::ieee80211::TxopProcedure::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.protectionmechanism.OriginatorProtectionMechanism func=inet::ieee80211::OriginatorProtectionMechanism::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.protectionmechanism.SingleProtectionMechanism func=inet::ieee80211::SingleProtectionMechanism::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl func=inet::ieee80211::AarfRateControl::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.rateselection.QosRateSelection func=inet::ieee80211::QosRateSelection::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.rateselection.RateSelection func=inet::ieee80211::RateSelection::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.recipient.CtsPolicy func=inet::ieee80211::CtsPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.recipient.QosCtsPolicy func=inet::ieee80211::QosCtsPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.recipient.RecipientAckPolicy func=inet::ieee80211::RecipientAckPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.recipient.RecipientQosAckPolicy func=inet::ieee80211::RecipientQosAckPolicy::receiveSignal info=receiveSignal
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Rx func=inet::ieee80211::Rx::lowerFrameReceived info=lowerFrameReceived("%s")
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Rx func=inet::ieee80211::Rx::receivedSignalPartChanged info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Rx func=inet::ieee80211::Rx::receptionStateChanged info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Rx func=inet::ieee80211::Rx::transmissionStateChanged info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.linklayer.ieee80211.mac.Tx func=inet::ieee80211::Tx::radioTransmissionFinished info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio func=inet::physicallayer::Ieee80211OfdmRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio func=inet::physicallayer::Ieee80211Radio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio func=inet::physicallayer::Radio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=mgmtIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::Ieee80211SubtypeReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=mgmtIn msg=inet::Request kind=1 ctrl=inet::physicallayer::Ieee80211ConfigureRadioCommand tags=
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::Ieee80211SubtypeReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=lowerLayerOut msg=inet::Request kind=1 ctrl=inet::physicallayer::Ieee80211ConfigureRadioCommand tags=
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=mgmtOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: PACKET: insertAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.Ieee80211Mac: PACKET: insertAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.Ieee80211Mac: PACKET: insertAtFront inet::ieee80211::Ieee80211MgmtHeader
inet.linklayer.ieee80211.mac.Ieee80211Mac: PACKET: popAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.Ieee80211Mac: PACKET: popAtFront inet::ieee80211::Ieee80211DataOrMgmtHeader
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: addTagIfAbsent inet::UserPriorityInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: findTag inet::ErrorRateInd
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: findTag inet::UserPriorityReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: getTag inet::Ieee80211SubtypeReq
inet.linklayer.ieee80211.mac.Ieee80211Mac: TAG: getTag inet::MacAddressReq
inet.linklayer.ieee80211.mac.Rx: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::corruptedFrameReceived info=corruptedFrameReceived
inet.linklayer.ieee80211.mac.Rx: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium BUSY
inet.linklayer.ieee80211.mac.Rx: CALL: module=inet.linklayer.ieee80211.mac.contention.Contention func=inet::ieee80211::Contention::mediumStateChanged info=medium FREE
inet.linklayer.ieee80211.mac.Rx: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=NAV
inet.linklayer.ieee80211.mac.Tx: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Dcf func=inet::ieee80211::Dcf::transmissionComplete info=transmissionComplete
inet.linklayer.ieee80211.mac.Tx: CALL: module=inet.linklayer.ieee80211.mac.coordinationfunction.Hcf func=inet::ieee80211::Hcf::transmissionComplete info=transmissionComplete
inet.linklayer.ieee80211.mac.Tx: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::sendDownFrame info=sendDownFrame("%s")
inet.linklayer.ieee80211.mac.Tx: CALL: module=inet.linklayer.ieee80211.mac.Rx func=inet::ieee80211::Rx::frameTransmitted info=<nullptr>
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211AckFrame
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211AddbaRequest
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211AddbaResponse
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211BasicBlockAck
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211BasicBlockAckReq
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211CtsFrame
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211DataHeader
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211MgmtHeader
inet.linklayer.ieee80211.mac.Tx: PACKET: insertAtFront inet::ieee80211::Ieee80211RtsFrame
inet.linklayer.ieee80211.mac.Tx: PACKET: popAtBack inet::ieee80211::Ieee80211MacTrailer
inet.linklayer.ieee80211.mac.Tx: PACKET: popAtFront inet::ieee80211::Ieee80211MacHeader
inet.linklayer.ieee80211.mac.Tx: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=endIFS
inet.linklayer.ieee80211.mac.Tx: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: INPUT: gate=mgmtIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AssociateConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: INPUT: gate=mgmtIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AuthenticateConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: INPUT: gate=mgmtIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_ScanConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: OUTPUT: gate=mgmtOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AssociateRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: OUTPUT: gate=mgmtOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AuthenticateRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: OUTPUT: gate=mgmtOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_ScanRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=startUp
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: INPUT: gate=macIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: OUTPUT: gate=macOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::Ieee80211SubtypeReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: PACKET: insertAtBack inet::ieee80211::Ieee80211AssociationResponseFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: PACKET: insertAtBack inet::ieee80211::Ieee80211AuthenticationFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: PACKET: insertAtBack inet::ieee80211::Ieee80211BeaconFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: PACKET: insertAtBack inet::ieee80211::Ieee80211ProbeResponseFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=beaconTimer
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: TAG: addTag inet::Ieee80211SubtypeReq
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp: TAG: addTag inet::MacAddressReq
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: CALL: module=inet.applications.dhcp.DhcpClient func=inet::DhcpClient::receiveSignal info=<nullptr>
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta func=inet::ieee80211::Ieee80211AgentSta::receiveSignal info=<nullptr>
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: INPUT: gate=agentIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AssociateRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: INPUT: gate=agentIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AuthenticateRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: INPUT: gate=agentIn msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_ScanRequest tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: INPUT: gate=macIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: OUTPUT: gate=agentOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AssociateConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: OUTPUT: gate=agentOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_AuthenticateConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: OUTPUT: gate=agentOut msg=omnetpp::cMessage kind=0 ctrl=inet::ieee80211::Ieee80211Prim_ScanConfirm tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: OUTPUT: gate=macOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::Ieee80211SubtypeReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: OUTPUT: gate=macOut msg=inet::Request kind=1 ctrl=inet::physicallayer::Ieee80211ConfigureRadioCommand tags=
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: PACKET: insertAtBack inet::ieee80211::Ieee80211AssociationRequestFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: PACKET: insertAtBack inet::ieee80211::Ieee80211AuthenticationFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: PACKET: insertAtBack inet::ieee80211::Ieee80211ProbeRequestFrame
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=sendProbe
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: SCHEDULE:  msg=omnetpp::cMessage kind=4 ctrl=<null> tags= msgname=minChannelTime
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=maxChannelTime
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: SCHEDULE:  msg=omnetpp::cMessage kind=6 ctrl=<null> tags= msgname=beaconTimeout
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtStaSimplified: TAG: findTag inet::NextHopInterfaceData
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: TAG: addTag inet::Ieee80211SubtypeReq
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: TAG: addTag inet::MacAddressReq
inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta: TAG: getTag inet::SignalPowerInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee80211.portal.Ieee80211Portal: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: INPUT: gate=lowerLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.portal.Ieee80211Portal: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee80211.portal.Ieee80211Portal: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: PACKET: insertAtBack inet::EthernetFcs
inet.linklayer.ieee80211.portal.Ieee80211Portal: PACKET: insertAtFront inet::EthernetMacHeader
inet.linklayer.ieee80211.portal.Ieee80211Portal: PACKET: insertAtFront inet::Ieee8022LlcSnapHeader
inet.linklayer.ieee80211.portal.Ieee80211Portal: PACKET: popAtBack inet::EthernetFcs
inet.linklayer.ieee80211.portal.Ieee80211Portal: PACKET: popAtFront inet::EthernetMacHeader
inet.linklayer.ieee80211.portal.Ieee80211Portal: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ieee80211.portal.Ieee80211Portal: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ieee80211.portal.Ieee80211Portal: TAG: addTagIfAbsent inet::MacAddressReq
inet.linklayer.ieee80211.portal.Ieee80211Portal: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee80211.portal.Ieee80211Portal: TAG: getTag inet::MacAddressInd
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.ieee802154.Ieee802154Mac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee802154.Ieee802154Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ieee802154.Ieee802154Mac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ieee802154.Ieee802154Mac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154Mac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee802154.Ieee802154Mac: PACKET: insertAtFront inet::Ieee802154MacHeader
inet.linklayer.ieee802154.Ieee802154Mac: PACKET: popAtFront inet::Ieee802154MacHeader
inet.linklayer.ieee802154.Ieee802154Mac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-backoff
inet.linklayer.ieee802154.Ieee802154Mac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-cca
inet.linklayer.ieee802154.Ieee802154Mac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ieee802154.Ieee802154Mac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ieee802154.Ieee802154Mac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ieee802154.Ieee802154Mac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154Mac: TAG: getTag inet::MacAddressReq
inet.linklayer.ieee802154.Ieee802154Mac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154NarrowbandInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.ieee802154.Ieee802154NarrowbandInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: CALL: module=inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio func=inet::physicallayer::FlatRadioBase::setRadioMode info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: CALL: module=inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio func=inet::physicallayer::FlatRadioBase::setRadioMode info=<nullptr>
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: PACKET: insertAtFront inet::Ieee802154MacHeader
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: PACKET: popAtFront inet::Ieee802154MacHeader
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-backoff
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-cca
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-rxAck
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer-sifs
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: findTag inet::ErrorRateInd
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: getTag inet::MacAddressReq
inet.linklayer.ieee802154.Ieee802154NarrowbandMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleRegisterService info=handleRegisterService
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::getInterfaceIdForAddress info=MacAddressTable::getPortForAddress()
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::updateTableWithAddress info=MacAddressTable::updateTableWithAddress()
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: INPUT: gate=ifIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: OUTPUT: gate=ifOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: addTag inet::InterfaceReq
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: findTag inet::Ieee8021dInterfaceData
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: findTag inet::InterfaceReq
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: getTag inet::Ieee8021dInterfaceData
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: getTag inet::InterfaceInd
inet.linklayer.ieee8021d.relay.Ieee8021dRelay: TAG: removeTag inet::PacketProtocolTag
inet.linklayer.ieee8021d.rstp.Rstp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee8021d.rstp.Rstp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ieee8021d.rstp.Rstp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.linklayer.ieee8021d.rstp.Rstp: CALL: module=inet.linklayer.ethernet.switch.MacAddressTable func=inet::MacAddressTable::flush info=MacAddressTable::flush():  Clearing interfaceId %d cache
inet.linklayer.ieee8021d.rstp.Rstp: INPUT: gate=relayIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ieee8021d.rstp.Rstp: OUTPUT: gate=relayOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee8021d.rstp.Rstp: PACKET: insertAtBack inet::Bpdu
inet.linklayer.ieee8021d.rstp.Rstp: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=itshellotime
inet.linklayer.ieee8021d.rstp.Rstp: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=upgrade
inet.linklayer.ieee8021d.rstp.Rstp: TAG: addTag inet::DispatchProtocolReq
inet.linklayer.ieee8021d.rstp.Rstp: TAG: addTag inet::InterfaceReq
inet.linklayer.ieee8021d.rstp.Rstp: TAG: addTag inet::MacAddressReq
inet.linklayer.ieee8021d.rstp.Rstp: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ieee8021d.rstp.Rstp: TAG: getTag inet::Ieee8021dInterfaceData
inet.linklayer.ieee8021d.rstp.Rstp: TAG: getTag inet::InterfaceInd
inet.linklayer.ieee8021d.rstp.Rstp: TAG: getTag inet::MacAddressInd
inet.linklayer.ieee8021d.stp.Stp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee8021d.stp.Stp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.linklayer.ieee8021d.stp.Stp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.linklayer.ieee8021d.stp.Stp: INPUT: gate=relayIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.linklayer.ieee8021d.stp.Stp: OUTPUT: gate=relayOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee8021d.stp.Stp: PACKET: insertAtBack inet::Bpdu
inet.linklayer.ieee8021d.stp.Stp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=STP_TICK
inet.linklayer.ieee8021d.stp.Stp: TAG: addTag inet::DispatchProtocolReq
inet.linklayer.ieee8021d.stp.Stp: TAG: addTag inet::InterfaceReq
inet.linklayer.ieee8021d.stp.Stp: TAG: addTag inet::MacAddressReq
inet.linklayer.ieee8021d.stp.Stp: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ieee8021d.stp.Stp: TAG: getTag inet::Ieee8021dInterfaceData
inet.linklayer.ieee8021d.stp.Stp: TAG: getTag inet::InterfaceInd
inet.linklayer.ieee8021d.stp.Stp: TAG: getTag inet::MacAddressInd
inet.linklayer.ieee8021d.tester.StpTester: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeOutputGateId info=<nullptr>
inet.linklayer.ieee8021d.tester.StpTester: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=checktime
inet.linklayer.ieee8021d.tester.StpTester: TAG: findTag inet::Ieee8021dInterfaceData
inet.linklayer.ieee8021q.Ieee8021qEncap: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanReq
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanReq
inet.linklayer.ieee8021q.Ieee8021qEncap: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.ieee8021q.Ieee8021qEncap: PACKET: insertAtFront inet::EthernetMacHeader
inet.linklayer.ieee8021q.Ieee8021qEncap: PACKET: popAtFront inet::EthernetMacHeader
inet.linklayer.ieee8021q.Ieee8021qEncap: TAG: addTagIfAbsent inet::VlanInd
inet.linklayer.lmac.LMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.lmac.LMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.lmac.LMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.lmac.LMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.lmac.LMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.lmac.LMac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.lmac.LMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.lmac.LMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.lmac.LMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.lmac.LMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.lmac.LMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.lmac.LMacInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.lmac.LMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.lmac.LMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.lmac.LMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.lmac.LMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.lmac.LMac: PACKET: insertAtBack inet::ArpPacket
inet.linklayer.lmac.LMac: PACKET: insertAtBack inet::SequenceChunk
inet.linklayer.lmac.LMac: PACKET: insertAtFront inet::LMacHeader
inet.linklayer.lmac.LMac: PACKET: popAtFront inet::LMacHeader
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_CHECK_CHANNEL ctrl=<null> tags= msgname=checkchannel
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_SEND_CONTROL ctrl=<null> tags= msgname=send_control
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_SEND_DATA ctrl=<null> tags= msgname=sendData
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_SETUP_PHASE_END ctrl=<null> tags= msgname=setup phase
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_START_LMAC ctrl=<null> tags= msgname=start_lmac
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_TIMEOUT ctrl=<null> tags= msgname=timeout
inet.linklayer.lmac.LMac: SCHEDULE:  msg=omnetpp::cMessage kind=inet::LMacType::LMAC_WAKEUP ctrl=<null> tags= msgname=wakeup
inet.linklayer.lmac.LMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.lmac.LMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.lmac.LMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.lmac.LMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.lmac.LMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.lmac.LMac: TAG: getTag inet::MacAddressReq
inet.linklayer.lmac.LMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.loopback.Loopback: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.loopback.Loopback: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.loopback.Loopback: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.loopback.Loopback: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.loopback.Loopback: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.loopback.LoopbackInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.loopback.LoopbackInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.loopback.Loopback: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.loopback.Loopback: TAG: addTag inet::DispatchProtocolReq
inet.linklayer.loopback.Loopback: TAG: addTag inet::InterfaceInd
inet.linklayer.loopback.Loopback: TAG: addTag inet::PacketProtocolTag
inet.linklayer.loopback.Loopback: TAG: getTag inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.ppp.Ppp: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.ppp.Ppp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ppp.Ppp: INPUT: gate=phys$i msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.ppp.Ppp: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::InterfaceReq,inet::PacketProtocolTag
inet.linklayer.ppp.PppInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.ppp.PppInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.ppp.PppInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.ppp.Ppp: OUTPUT: gate=phys$o msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: PACKET: insertAtBack inet::PppTrailer
inet.linklayer.ppp.Ppp: PACKET: insertAtFront inet::PppHeader
inet.linklayer.ppp.Ppp: PACKET: popAtBack inet::PppTrailer
inet.linklayer.ppp.Ppp: PACKET: popAtFront inet::Ipv4Header
inet.linklayer.ppp.Ppp: PACKET: popAtFront inet::PppHeader
inet.linklayer.ppp.Ppp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=pppEndTxEvent
inet.linklayer.ppp.Ppp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.ppp.Ppp: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.ppp.Ppp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: TAG: addTag inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: TAG: findTag inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: TAG: getTag inet::PacketProtocolTag
inet.linklayer.ppp.Ppp: TAG: removeTag inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.shortcut.ShortcutInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.shortcut.ShortcutInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.shortcut.ShortcutMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.shortcut.ShortcutMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.shortcut.ShortcutMac: INPUT: gate=peerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.shortcut.ShortcutMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: OUTPUTDIRECT: msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: PACKET: insertAtFront inet::ShortcutMacHeader
inet.linklayer.shortcut.ShortcutMac: PACKET: popAtFront inet::ShortcutMacHeader
inet.linklayer.shortcut.ShortcutMac: TAG: addTag inet::DispatchProtocolReq
inet.linklayer.shortcut.ShortcutMac: TAG: addTag inet::InterfaceInd
inet.linklayer.shortcut.ShortcutMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.shortcut.ShortcutMac: TAG: getTag inet::MacAddressReq
inet.linklayer.shortcut.ShortcutMac: TAG: getTag inet::PacketProtocolTag
inet.linklayer.tun.Tun: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.tun.Tun: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.tun.Tun: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.tun.Tun: INPUT: gate=upperLayerIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::InterfaceReq,inet::SocketReq
inet.linklayer.tun.Tun: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::TunOpenCommand tags=inet::InterfaceReq,inet::SocketReq
inet.linklayer.tun.TunInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.tun.TunInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.tun.Tun: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.linklayer.tun.Tun: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::InterfaceInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.linklayer.tun.Tun: TAG: addTag inet::DispatchProtocolReq
inet.linklayer.tun.Tun: TAG: addTag inet::InterfaceInd
inet.linklayer.tun.Tun: TAG: addTag inet::NetworkProtocolInd
inet.linklayer.tun.Tun: TAG: addTag inet::PacketProtocolTag
inet.linklayer.tun.Tun: TAG: addTag inet::SocketInd
inet.linklayer.tun.Tun: TAG: findTag inet::SocketReq
inet.linklayer.tun.Tun: TAG: getTag inet::NetworkProtocolInd
inet.linklayer.tun.Tun: TAG: getTag inet::PacketProtocolTag
inet.linklayer.tun.Tun: TAG: getTag inet::SocketReq
inet.linklayer.vlan.VlanInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.vlan.VlanInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.vlan.VlanTunnel: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.vlan.VlanTunnel: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.vlan.VlanTunnel: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.vlan.VlanTunnel: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.vlan.VlanTunnel: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SocketInd,inet::VlanInd
inet.linklayer.vlan.VlanTunnel: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.vlan.VlanTunnel: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd,inet::VlanReq
inet.linklayer.vlan.VlanTunnel: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::VlanInd
inet.linklayer.vlan.VlanTunnel: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::VlanReq
inet.linklayer.vlan.VlanTunnel: OUTPUT: gate=upperLayerOut msg=inet::Request kind=1 ctrl=inet::EthernetBindCommand tags=inet::InterfaceReq,inet::SocketReq
inet.linklayer.vlan.VlanTunnel: TAG: addTagIfAbsent inet::InterfaceReq
inet.linklayer.vlan.VlanTunnel: TAG: addTagIfAbsent inet::SocketReq
inet.linklayer.vlan.VlanTunnel: TAG: addTag inet::VlanReq
inet.linklayer.vlan.VlanTunnel: TAG: findTag inet::SocketInd
inet.linklayer.vlan.VlanTunnel: TAG: getTag inet::InterfaceInd
inet.linklayer.vlan.VlanTunnel: TAG: removeTag inet::SocketInd
inet.linklayer.xmac.XMac: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.linklayer.xmac.XMac: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.linklayer.xmac.XMac: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.xmac.XMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.xmac.XMac: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.linklayer.xmac.XMac: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.linklayer.xmac.XMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.xmac.XMac: INPUT: gate=lowerLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.xmac.XMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.xmac.XMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.xmac.XMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.xmac.XMac: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.xmac.XMacInterface: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterInterface info=handleRegisterInterface
inet.linklayer.xmac.XMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.linklayer.xmac.XMacInterface: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.linklayer.xmac.XMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.linklayer.xmac.XMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.linklayer.xmac.XMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.linklayer.xmac.XMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.linklayer.xmac.XMac: OUTPUT: gate=lowerLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.linklayer.xmac.XMac: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.linklayer.xmac.XMac: PACKET: insertAtFront inet::XMacHeader
inet.linklayer.xmac.XMac: PACKET: popAtFront inet::XMacHeader
inet.linklayer.xmac.XMac: SCHEDULE:  msg=inet::Packet kind=192 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd msgname=pingNN-reply
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=196 ctrl=<null> tags= msgname=start_xmac
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=197 ctrl=<null> tags= msgname=wakeup
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=199 ctrl=<null> tags= msgname=cca_timeout
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=200 ctrl=<null> tags= msgname=ack_tx_over
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=202 ctrl=<null> tags= msgname=stop_preambles
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=203 ctrl=<null> tags= msgname=data_tx_over
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=204 ctrl=<null> tags= msgname=data_timeout
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=205 ctrl=<null> tags= msgname=switch_preamble_phase
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=206 ctrl=<null> tags= msgname=delay_for_ack_within_remote_rx
inet.linklayer.xmac.XMac: SCHEDULE:  msg=omnetpp::cMessage kind=207 ctrl=<null> tags= msgname=switching_done
inet.linklayer.xmac.XMac: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.linklayer.xmac.XMac: TAG: addTagIfAbsent inet::InterfaceInd
inet.linklayer.xmac.XMac: TAG: addTagIfAbsent inet::MacAddressInd
inet.linklayer.xmac.XMac: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.linklayer.xmac.XMac: TAG: addTag inet::PacketProtocolTag
inet.linklayer.xmac.XMac: TAG: getTag inet::MacAddressReq
inet.linklayer.xmac.XMac: TAG: getTag inet::PacketProtocolTag
inet.mobility.group.MoBanCoordinator: CALL: module=inet.mobility.group.MoBanLocal func=inet::MoBanLocal::setMoBANParameters info=<nullptr>
inet.mobility.group.MoBanCoordinator: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.group.MoBanLocal: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.AnsimMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.BonnMotionMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.ChiangMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.CircleMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.GaussMarkovMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.LinearMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.MassMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.RandomWaypointMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.RectangleMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.TractorMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.mobility.single.TurtleMobility: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=move
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::receiveSignal info=arpResolutionCompleted
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::receiveSignal info=arpResolutionTimedOut
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.networklayer.arp.ipv4.Arp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::VlanInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.arp.ipv4.Arp: INPUT: gate=ifIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.arp.ipv4.Arp: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.arp.ipv4.Arp: PACKET: insertAtFront inet::ArpPacket
inet.networklayer.arp.ipv4.Arp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=ARP timeout
inet.networklayer.arp.ipv4.Arp: TAG: addTag inet::InterfaceReq
inet.networklayer.arp.ipv4.Arp: TAG: addTag inet::MacAddressReq
inet.networklayer.arp.ipv4.Arp: TAG: addTag inet::PacketProtocolTag
inet.networklayer.arp.ipv4.Arp: TAG: getTag inet::InterfaceInd
inet.networklayer.arp.ipv4.Arp: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.arp.ipv4.GlobalArp: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.arp.ipv4.GlobalArp: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.arp.ipv4.GlobalArp: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.arp.ipv4.GlobalArp: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.arp.ipv4.GlobalArp: TAG: getTag inet::Ipv6InterfaceData
inet.networklayer.common.EchoProtocol: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.common.EchoProtocol: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.common.EchoProtocol: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.common.EchoProtocol: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.common.EchoProtocol: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.common.EchoProtocol: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.common.EchoProtocol: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.common.EchoProtocol: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.common.EchoProtocol: PACKET: insertAtBack inet::ByteCountChunk
inet.networklayer.common.EchoProtocol: PACKET: insertAtBack inet::EchoPacket
inet.networklayer.common.EchoProtocol: PACKET: popAtFront inet::EchoPacket
inet.networklayer.common.EchoProtocol: TAG: addTag inet::DispatchProtocolReq
inet.networklayer.common.EchoProtocol: TAG: addTag inet::L3AddressReq
inet.networklayer.common.EchoProtocol: TAG: addTag inet::PacketProtocolTag
inet.networklayer.common.EchoProtocol: TAG: getTag inet::L3AddressInd
inet.networklayer.common.EchoProtocol: TAG: getTag inet::NetworkProtocolInd
inet.networklayer.common.InterfaceTable: CALL: module=inet.linklayer.ieee8021d.rstp.Rstp func=inet::Rstp::receiveSignal info=<nullptr>
inet.networklayer.common.InterfaceTable: CALL: module=inet.networklayer.arp.ipv4.GlobalArp func=inet::GlobalArp::receiveSignal info=<nullptr>
inet.networklayer.common.InterfaceTable: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::receiveSignal info=<nullptr>
inet.networklayer.common.InterfaceTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::receiveSignal info=<nullptr>
inet.networklayer.common.InterfaceTable: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::receiveSignal info=<nullptr>
inet.networklayer.common.InterfaceTable: CALL: module=inet.routing.ospfv2.Ospfv2 func=inet::ospfv2::Ospfv2::receiveSignal info=Ospf::receiveSignal
inet.networklayer.common.InterfaceTable: CALL: module=inet.routing.rip.Rip func=inet::Rip::receiveSignal info=Rip::receiveChangeNotification(%s)
inet.networklayer.common.InterfaceTable: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.common.NetfilterInfoHook: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.networklayer.common.NetfilterInfoHook: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::unregisterHook info=unregisterHook()
inet.networklayer.configurator.ipv4.HostAutoConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.configurator.ipv4.HostAutoConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.configurator.ipv4.HostAutoConfigurator: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeOutputGateId info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: PACKET: insertAtBack inet::BitCountChunk
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: PACKET: insertAtBack inet::ByteCountChunk
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: PACKET: insertAtFront inet::physicallayer::Ieee80211OfdmPhyHeader
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: PACKET: insertAtFront inet::UnitDiskPhyHeader
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::ErrorRateInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ChannelInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::SignalPowerInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::SignalTimeInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTagIfAbsent inet::SnirInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: addTag inet::PacketProtocolTag
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: findTag inet::physicallayer::Ieee80211ChannelReq
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: findTag inet::SignalBitrateReq
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: findTag inet::SignalPowerReq
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: getTag inet::ErrorRateInd
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator: TAG: getTag inet::PacketProtocolTag
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: CALL: module=inet.networklayer.ipv4.Igmpv3 func=inet::Igmpv3::receiveSignal info=<nullptr>
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addMulticastRoute info=addMulticastRoute(...)
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: TAG: addTag inet::Ipv4InterfaceData
inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeOutputGateId info=<nullptr>
inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator: TAG: getTag inet::Ipv6InterfaceData
inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeOutputGateId info=<nullptr>
inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator: CALL: module=inet.networklayer.nexthop.NextHopRoutingTable func=inet::NextHopRoutingTable::addRoute info=addRoute(...)
inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator: TAG: getTag inet::NextHopInterfaceData
inet.networklayer.diffserv.DscpMarker: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.diffserv.DscpMarker: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.diffserv.MultiFieldClassifier: CALL: module=inet.networklayer.diffserv.DscpMarker func=inet::DscpMarker::pushOrSendPacket info=<nullptr>
inet.networklayer.diffserv.MultiFieldClassifier: CALL: module=inet.queueing.common.PacketMultiplexer func=inet::queueing::PacketMultiplexer::pushOrSendPacket info=<nullptr>
inet.networklayer.diffserv.MultiFieldClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.diffserv.MultiFieldClassifier: INPUT: gate=in msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.diffserv.MultiFieldClassifier: PACKET: insertAtFront inet::Ipv4Header
inet.networklayer.diffserv.MultiFieldClassifier: PACKET: popAtFront inet::ArpPacket
inet.networklayer.diffserv.MultiFieldClassifier: PACKET: popAtFront inet::Ipv4Header
inet.networklayer.diffserv.MultiFieldClassifier: PACKET: popAtFront inet::UdpHeader
inet.networklayer.diffserv.MultiFieldClassifier: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.diffserv.MultiFieldClassifier: TAG: findTag inet::L3AddressInd
inet.networklayer.diffserv.MultiFieldClassifier: TAG: findTag inet::NetworkProtocolInd
inet.networklayer.diffserv.MultiFieldClassifier: TAG: findTag inet::PacketProtocolTag
inet.networklayer.diffserv.MultiFieldClassifier: TAG: getTag inet::PacketProtocolTag
inet.networklayer.diffserv.SingleRateThreeColorMeter: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.diffserv.TokenBucketMeter: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.flooding.Flooding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.flooding.Flooding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.flooding.Flooding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.flooding.Flooding: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.flooding.Flooding: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.flooding.Flooding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.flooding.Flooding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.flooding.Flooding: PACKET: insertAtBack inet::SequenceChunk
inet.networklayer.flooding.Flooding: PACKET: insertAtFront inet::FloodingHeader
inet.networklayer.flooding.Flooding: PACKET: popAtFront inet::FloodingHeader
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::HopLimitInd
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.flooding.Flooding: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.flooding.Flooding: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.flooding.Flooding: TAG: findTag inet::L3AddressReq
inet.networklayer.flooding.Flooding: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.flooding.Flooding: TAG: getTag inet::L3AddressInd
inet.networklayer.flooding.Flooding: TAG: getTag inet::PacketProtocolTag
inet.networklayer.flooding.Flooding: TAG: getTag inet::SocketReq
inet.networklayer.icmpv6.Icmpv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.icmpv6.Icmpv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.icmpv6.Icmpv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.icmpv6.Icmpv6: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Icmpv6: OUTPUT: gate=ipv6Out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.icmpv6.Icmpv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Icmpv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Icmpv6: PACKET: insertAtBack inet::Icmpv6DestUnreachableMsg
inet.networklayer.icmpv6.Icmpv6: PACKET: insertAtBack inet::SequenceChunk
inet.networklayer.icmpv6.Icmpv6: PACKET: insertAtFront inet::Icmpv6DestUnreachableMsg
inet.networklayer.icmpv6.Icmpv6: PACKET: popAtFront inet::Icmpv6Header
inet.networklayer.icmpv6.Icmpv6: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.icmpv6.Icmpv6: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.icmpv6.Icmpv6: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.icmpv6.Icmpv6: TAG: addTag inet::L3AddressInd
inet.networklayer.icmpv6.Icmpv6: TAG: addTag inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: CALL: module=inet.networklayer.icmpv6.Icmpv6 func=inet::Icmpv6::sendErrorMessage info=sendErrorMessage(datagram, type=%d, code=%d)
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: CALL: module=inet.networklayer.icmpv6.Ipv6NeighbourDiscovery func=inet::Ipv6NeighbourDiscovery::createAndSendNsPacket info=<nullptr>
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: CALL: module=inet.networklayer.icmpv6.Ipv6NeighbourDiscovery func=inet::Ipv6NeighbourDiscovery::initiateDad info=<nullptr>
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::doLongestPrefixMatch info=doLongestPrefixMatch(%s)
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: INPUT: gate=ipv6In msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: OUTPUT: gate=ipv6Out msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: OUTPUT: gate=ipv6Out msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: OUTPUT: gate=ipv6Out msg=inet::Packet kind=0 ctrl=<null> tags=inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: PACKET: insertAtFront inet::Ipv6NeighbourAdvertisement
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: PACKET: insertAtFront inet::Ipv6NeighbourSolicitation
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: PACKET: insertAtFront inet::Ipv6RouterAdvertisement
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: PACKET: insertAtFront inet::Ipv6RouterSolicitation
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=assignLinkLocalAddr
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=sendPeriodicRA
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=sendSolicitedRA
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=initiateRTRDIS
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=4 ctrl=<null> tags= msgname=dadTimeout
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=processRDTimeout
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=6 ctrl=<null> tags= msgname=NUDTimeout
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: SCHEDULE:  msg=omnetpp::cMessage kind=7 ctrl=<null> tags= msgname=arTimeout
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: addTagIfAbsent inet::HopLimitReq
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: getTag inet::HopLimitInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: getTag inet::InterfaceInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: getTag inet::Ipv6InterfaceData
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: getTag inet::L3AddressInd
inet.networklayer.icmpv6.Ipv6NeighbourDiscovery: TAG: getTag inet::PacketProtocolTag
inet.networklayer.internetcloud.MatrixCloudDelayer: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.networklayer.internetcloud.MatrixCloudDelayer: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::reinjectQueuedDatagram info=reinjectDatagram()
inet.networklayer.internetcloud.MatrixCloudDelayer: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::unregisterHook info=unregisterHook()
inet.networklayer.internetcloud.MatrixCloudDelayer: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=Delay
inet.networklayer.internetcloud.MatrixCloudDelayer: TAG: getTag inet::InterfaceInd
inet.networklayer.internetcloud.MatrixCloudDelayer: TAG: getTag inet::InterfaceReq
inet.networklayer.ipv4.Icmp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ipv4.Icmp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ipv4.Icmp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ipv4.Icmp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalBroadcastAddress info=isLocalBroadcastAddress(%u.%u.%u.%u)
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Icmp: INPUT: gate=ipIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Icmp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: PACKET: insertAtBack inet::BitsChunk
inet.networklayer.ipv4.Icmp: PACKET: insertAtBack inet::ByteCountChunk
inet.networklayer.ipv4.Icmp: PACKET: insertAtBack inet::BytesChunk
inet.networklayer.ipv4.Icmp: PACKET: insertAtBack inet::SequenceChunk
inet.networklayer.ipv4.Icmp: PACKET: insertAtFront inet::IcmpEchoReply
inet.networklayer.ipv4.Icmp: PACKET: insertAtFront inet::IcmpHeader
inet.networklayer.ipv4.Icmp: PACKET: popAtFront inet::IcmpEchoRequest
inet.networklayer.ipv4.Icmp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ipv4.Icmp: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.ipv4.Icmp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: TAG: addTag inet::L3AddressInd
inet.networklayer.ipv4.Icmp: TAG: addTag inet::L3AddressReq
inet.networklayer.ipv4.Icmp: TAG: addTag inet::PacketProtocolTag
inet.networklayer.ipv4.Icmp: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Icmp: TAG: getTag inet::L3AddressInd
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.routing.pim.modes.PimDm func=inet::PimDm::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Igmpv2: CALL: module=inet.routing.pim.modes.PimSm func=inet::PimSm::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Igmpv2: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv2: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv2: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::Ipv4OptionsReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv2: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv2: PACKET: insertAtFront inet::Igmpv2Leave
inet.networklayer.ipv4.Igmpv2: PACKET: insertAtFront inet::Igmpv2Query
inet.networklayer.ipv4.Igmpv2: PACKET: insertAtFront inet::Igmpv2Report
inet.networklayer.ipv4.Igmpv2: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=IgmpvN query timer
inet.networklayer.ipv4.Igmpv2: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=IgmpvN group timer
inet.networklayer.ipv4.Igmpv2: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=IgmpvN leave timer
inet.networklayer.ipv4.Igmpv2: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=IgmpvN rexmt timer
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::HopLimitReq
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.ipv4.Igmpv2: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv2: TAG: addTag inet::Ipv4OptionsReq
inet.networklayer.ipv4.Igmpv2: TAG: getTag inet::InterfaceInd
inet.networklayer.ipv4.Igmpv2: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Igmpv2: TAG: getTag inet::L3AddressInd
inet.networklayer.ipv4.Igmpv3: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ipv4.Igmpv3: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ipv4.Igmpv3: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ipv4.Igmpv3: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.ipv4.Igmpv3: CALL: module=inet.networklayer.ipv4.Igmpv3 func=inet::Igmpv3::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Igmpv3: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv3: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::InterfaceReq,inet::Ipv4OptionsReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv3: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::Ipv4OptionsReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv3: PACKET: insertAtFront inet::Igmpv3Query
inet.networklayer.ipv4.Igmpv3: PACKET: insertAtFront inet::Igmpv3Report
inet.networklayer.ipv4.Igmpv3: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=IgmpvN General Query timer
inet.networklayer.ipv4.Igmpv3: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=IgmpvN Host General Timer
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::HopLimitReq
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.ipv4.Igmpv3: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ipv4.Igmpv3: TAG: addTag inet::DscpReq
inet.networklayer.ipv4.Igmpv3: TAG: addTag inet::Ipv4OptionsReq
inet.networklayer.ipv4.Igmpv3: TAG: getTag inet::InterfaceInd
inet.networklayer.ipv4.Igmpv3: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Igmpv3: TAG: getTag inet::L3AddressInd
inet.networklayer.ipv4.Ipv4: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ipv4.Ipv4: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ipv4.Ipv4: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::resolveL3Address info=resolveMACAddress(%s,%s)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.arp.ipv4.GlobalArp func=inet::GlobalArp::resolveL3Address info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getFirstLoopbackInterface info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getFirstMulticastInterface info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.internetcloud.MatrixCloudDelayer func=inet::MatrixCloudDelayer::datagramForwardHook info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Icmp func=inet::Icmp::sendErrorMessage info=sendErrorMessage(datagram, type=%d, code=%d)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingMulticastRoute info=getMulticastRoutesFor(%u.%u.%u.%u, %u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalBroadcastAddress info=isLocalBroadcastAddress(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::datagramForwardHook info=datagramForwardHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.pim.modes.PimDm func=inet::PimDm::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4: CALL: module=inet.routing.pim.modes.PimSm func=inet::PimSm::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::VlanInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=queueIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L3AddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::InterfaceReq,inet::Ipv4OptionsReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::Ipv4OptionsReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::HopLimitReq,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::L3AddressReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::InterfaceReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::Ipv4SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ipv4.Ipv4: INPUT: gate=transportIn msg=inet::Request kind=3 ctrl=inet::Ipv4SocketCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=queueOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Indication kind=1 ctrl=inet::Ipv4SocketClosedIndication tags=inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::VlanInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: OUTPUT: gate=transportOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: PACKET: insertAtBack inet::ByteCountChunk
inet.networklayer.ipv4.Ipv4: PACKET: insertAtBack inet::LinkStateMsg
inet.networklayer.ipv4.Ipv4: PACKET: insertAtBack inet::SequenceChunk
inet.networklayer.ipv4.Ipv4: PACKET: insertAtBack inet::SliceChunk
inet.networklayer.ipv4.Ipv4: PACKET: insertAtFront inet::Ipv4Header
inet.networklayer.ipv4.Ipv4: PACKET: insertAtFront inet::sctp::SctpHeader
inet.networklayer.ipv4.Ipv4: PACKET: insertAtFront inet::tcp::TcpHeader
inet.networklayer.ipv4.Ipv4: PACKET: insertAtFront inet::UdpHeader
inet.networklayer.ipv4.Ipv4: PACKET: popAtFront inet::Ipv4Header
inet.networklayer.ipv4.Ipv4: PACKET: popAtFront inet::sctp::SctpHeader
inet.networklayer.ipv4.Ipv4: PACKET: popAtFront inet::tcp::TcpHeader
inet.networklayer.ipv4.Ipv4: PACKET: popAtFront inet::UdpHeader
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getFirstLoopbackInterface info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%u.%u.%u.%u)
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::removeRoute info=removeRoute(...)
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.networklayer.ldp.Ldp func=inet::Ldp::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.routing.pim.modes.PimDm func=inet::PimDm::receiveSignal info=<nullptr>
inet.networklayer.ipv4.Ipv4RoutingTable: CALL: module=inet.routing.rip.Rip func=inet::Rip::receiveSignal info=Rip::receiveChangeNotification(%s)
inet.networklayer.ipv4.Ipv4RoutingTable: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Ipv4RoutingTable: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::DscpInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::EcnInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::HopLimitInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::NextHopAddressReq
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.ipv4.Ipv4: TAG: addTag inet::SocketInd
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::ErrorRateInd
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::InterfaceInd
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::InterfaceReq
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::MulticastReq
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::NetworkProtocolInd
inet.networklayer.ipv4.Ipv4: TAG: findTag inet::NextHopAddressReq
inet.networklayer.ipv4.Ipv4: TAG: getTag inet::InterfaceInd
inet.networklayer.ipv4.Ipv4: TAG: getTag inet::InterfaceReq
inet.networklayer.ipv4.Ipv4: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.ipv4.Ipv4: TAG: getTag inet::PacketProtocolTag
inet.networklayer.ipv4.Ipv4: TAG: getTag inet::SocketReq
inet.networklayer.ipv4.Ipv4: TAG: removeTag inet::L3AddressReq
inet.networklayer.ipv4.Ipv4: TAG: removeTag inet::NextHopAddressReq
inet.networklayer.ipv6.Ipv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ipv6.Ipv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ipv6.Ipv6: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ipv6.Ipv6: CALL: module=inet.networklayer.icmpv6.Ipv6NeighbourDiscovery func=inet::Ipv6NeighbourDiscovery::resolveNeighbour info=resolveNeighbor(%s,if=%d)
inet.networklayer.ipv6.Ipv6: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::doLongestPrefixMatch info=doLongestPrefixMatch(%s)
inet.networklayer.ipv6.Ipv6: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%s)=?
inet.networklayer.ipv6.Ipv6: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::isLocalAddress info=isLocalAddress(%s) y/n
inet.networklayer.ipv6.Ipv6: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::lookupDestCache info=lookupDestCache(%s)
inet.networklayer.ipv6.Ipv6: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.ipv6.Ipv6: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.ipv6.Ipv6: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.ipv6.Ipv6: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.ipv6.Ipv6: INPUT: gate=ndIn msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=ndIn msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=ndIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::Ipv6SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=inet::Ipv6NdControlInfo tags=inet::DispatchProtocolReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=ndOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.ipv6.Ipv6: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: PACKET: insertAtFront inet::Ipv6Header
inet.networklayer.ipv6.Ipv6: PACKET: insertAtFront inet::sctp::SctpHeader
inet.networklayer.ipv6.Ipv6: PACKET: insertAtFront inet::UdpHeader
inet.networklayer.ipv6.Ipv6: PACKET: popAtFront inet::Ipv6Header
inet.networklayer.ipv6.Ipv6: PACKET: popAtFront inet::sctp::SctpHeader
inet.networklayer.ipv6.Ipv6: PACKET: popAtFront inet::UdpHeader
inet.networklayer.ipv6.Ipv6RoutingTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.ipv6.Ipv6RoutingTable: TAG: addTag inet::Ipv6InterfaceData
inet.networklayer.ipv6.Ipv6RoutingTable: TAG: getTag inet::Ipv6InterfaceData
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::DscpInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::EcnInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::HopLimitInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.ipv6.Ipv6: TAG: findTag inet::InterfaceInd
inet.networklayer.ipv6.Ipv6: TAG: findTag inet::InterfaceReq
inet.networklayer.ipv6.Ipv6: TAG: findTag inet::NetworkProtocolInd
inet.networklayer.ipv6.Ipv6: TAG: getTag inet::InterfaceInd
inet.networklayer.ipv6.Ipv6: TAG: getTag inet::Ipv6InterfaceData
inet.networklayer.ipv6.Ipv6: TAG: getTag inet::L3AddressReq
inet.networklayer.ipv6.Ipv6: TAG: getTag inet::PacketProtocolTag
inet.networklayer.ipv6.Ipv6: TAG: getTag inet::SocketReq
inet.networklayer.ipv6.Ipv6: TAG: removeTag inet::L3AddressReq
inet.networklayer.ldp.Ldp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ldp.Ldp: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.linklayer.ppp.Ppp func=inet::Ppp::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.ldp.Ldp func=inet::Ldp::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.networklayer.ted.Ted func=inet::Ted::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.networklayer.ldp.Ldp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.networklayer.ldp.Ldp: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetMulticastInterfaceCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetMulticastLoopCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.ldp.Ldp: PACKET: insertAtBack inet::LdpHello
inet.networklayer.ldp.Ldp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=LDPSendHello
inet.networklayer.ldp.Ldp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ldp.Ldp: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.ldp.Ldp: TAG: addTagIfAbsent inet::L4PortReq
inet.networklayer.ldp.Ldp: TAG: addTagIfAbsent inet::SocketReq
inet.networklayer.ldp.Ldp: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.ldp.Ldp: TAG: findTag inet::SocketInd
inet.networklayer.ldp.Ldp: TAG: getTag inet::SocketInd
inet.networklayer.mpls.Mpls: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.mpls.Mpls: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.mpls.Mpls: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.mpls.Mpls: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.mpls.Mpls: INPUT: gate=ifIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: INPUT: gate=netwIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: INPUT: gate=netwIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: INPUT: gate=netwIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.mpls.Mpls: INPUT: gate=netwIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.mpls.Mpls: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: OUTPUT: gate=ifOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceInd,inet::InterfaceReq,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: OUTPUT: gate=netwOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: PACKET: insertAtFront inet::MplsHeader
inet.networklayer.mpls.Mpls: PACKET: popAtFront inet::MplsHeader
inet.networklayer.mpls.Mpls: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.mpls.Mpls: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: TAG: findTag inet::DispatchProtocolReq
inet.networklayer.mpls.Mpls: TAG: findTag inet::InterfaceInd
inet.networklayer.mpls.Mpls: TAG: findTag inet::InterfaceReq
inet.networklayer.mpls.Mpls: TAG: findTag inet::PacketProtocolTag
inet.networklayer.mpls.Mpls: TAG: getTag inet::InterfaceInd
inet.networklayer.mpls.Mpls: TAG: getTag inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.networklayer.arp.ipv4.GlobalArp func=inet::GlobalArp::resolveL3Address info=<nullptr>
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramLocalOutHook info=datagramLocalOutHook
inet.networklayer.nexthop.NextHopForwarding: CALL: module=inet.routing.gpsr.Gpsr func=inet::Gpsr::datagramPreRoutingHook info=datagramPreRoutingHook
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.nexthop.NextHopForwarding: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.nexthop.NextHopForwarding: PACKET: insertAtFront inet::NextHopForwardingHeader
inet.networklayer.nexthop.NextHopForwarding: PACKET: popAtFront inet::NextHopForwardingHeader
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::HopLimitInd
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::InterfaceInd
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.nexthop.NextHopForwarding: TAG: findTag inet::InterfaceInd
inet.networklayer.nexthop.NextHopForwarding: TAG: findTag inet::InterfaceReq
inet.networklayer.nexthop.NextHopForwarding: TAG: findTag inet::NextHopAddressReq
inet.networklayer.nexthop.NextHopForwarding: TAG: getTag inet::InterfaceInd
inet.networklayer.nexthop.NextHopForwarding: TAG: getTag inet::NextHopInterfaceData
inet.networklayer.nexthop.NextHopForwarding: TAG: getTag inet::PacketProtocolTag
inet.networklayer.nexthop.NextHopForwarding: TAG: getTag inet::SocketReq
inet.networklayer.nexthop.NextHopForwarding: TAG: removeTag inet::L3AddressReq
inet.networklayer.nexthop.NextHopRoutingTable: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.networklayer.nexthop.NextHopRoutingTable: TAG: addTag inet::NextHopInterfaceData
inet.networklayer.nexthop.NextHopRoutingTable: TAG: getTag inet::NextHopInterfaceData
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: PACKET: insertAtFront inet::ProbabilisticBroadcastHeader
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: PACKET: popAtFront inet::ProbabilisticBroadcastHeader
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=broadcastTimer
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=removeEvent
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: getTag inet::L3AddressInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: getTag inet::MacAddressInd
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: getTag inet::PacketProtocolTag
inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast: TAG: getTag inet::SocketReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.probabilistic.ProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.probabilistic.ProbabilisticBroadcast: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.probabilistic.ProbabilisticBroadcast: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: PACKET: insertAtFront inet::ProbabilisticBroadcastHeader
inet.networklayer.probabilistic.ProbabilisticBroadcast: PACKET: popAtFront inet::ProbabilisticBroadcastHeader
inet.networklayer.probabilistic.ProbabilisticBroadcast: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=broadcastTimer
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: getTag inet::L3AddressInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: getTag inet::MacAddressInd
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: getTag inet::PacketProtocolTag
inet.networklayer.probabilistic.ProbabilisticBroadcast: TAG: getTag inet::SocketReq
inet.networklayer.rsvpte.RsvpClassifier: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%u.%u.%u.%u)
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.networklayer.rsvpte.RsvpTe: CALL: module=inet.networklayer.ted.LinkStateRouting func=inet::LinkStateRouting::receiveSignal info=<nullptr>
inet.networklayer.rsvpte.RsvpTe: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.rsvpte.RsvpTe: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L3AddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.rsvpte.RsvpTe: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.rsvpte.RsvpTe: PACKET: insertAtBack inet::RsvpHelloMsg
inet.networklayer.rsvpte.RsvpTe: PACKET: insertAtBack inet::RsvpPathError
inet.networklayer.rsvpte.RsvpTe: PACKET: insertAtBack inet::RsvpPathMsg
inet.networklayer.rsvpte.RsvpTe: PACKET: insertAtBack inet::RsvpPathTear
inet.networklayer.rsvpte.RsvpTe: PACKET: insertAtBack inet::RsvpResvMsg
inet.networklayer.rsvpte.RsvpTe: PACKET: popAtFront inet::RsvpResvMsg
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::HelloTimeoutMsg kind=0 ctrl=<null> tags= msgname=hello timeout
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::HelloTimerMsg kind=0 ctrl=<null> tags= msgname=hello timer
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::PathNotifyMsg kind=0 ctrl=<null> tags= msgname=path notify
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::PsbTimerMsg kind=0 ctrl=<null> tags= msgname=psb timer
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::RsbCommitTimerMsg kind=0 ctrl=<null> tags= msgname=rsb commit
inet.networklayer.rsvpte.RsvpTe: SCHEDULE:  msg=inet::RsbRefreshTimerMsg kind=0 ctrl=<null> tags= msgname=rsb timer
inet.networklayer.rsvpte.RsvpTe: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.rsvpte.RsvpTe: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.rsvpte.RsvpTe: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.rsvpte.RsvpTe: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.rsvpte.RsvpTe: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.rsvpte.RsvpTe: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.rsvpte.RsvpTe: TAG: getTag inet::L3AddressInd
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.networklayer.ted.LinkStateRouting: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%u.%u.%u.%u)
inet.networklayer.ted.LinkStateRouting: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.ted.LinkStateRouting: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.ted.LinkStateRouting: PACKET: insertAtBack inet::LinkStateMsg
inet.networklayer.ted.LinkStateRouting: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=announce
inet.networklayer.ted.LinkStateRouting: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.ted.LinkStateRouting: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.ted.LinkStateRouting: TAG: addTagIfAbsent inet::L3AddressReq
inet.networklayer.ted.LinkStateRouting: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.ted.LinkStateRouting: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.ted.LinkStateRouting: TAG: getTag inet::L3AddressInd
inet.networklayer.ted.Ted: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.networklayer.ted.Ted: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.networklayer.ted.Ted: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.networklayer.ted.Ted: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceByAddress info=getInterfaceByAddress(%u.%u.%u.%u)
inet.networklayer.ted.Ted: TAG: getTag inet::Ipv4InterfaceData
inet.networklayer.wiseroute.WiseRoute: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.networklayer.wiseroute.WiseRoute: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.networklayer.wiseroute.WiseRoute: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.networklayer.wiseroute.WiseRoute: INPUT: gate=queueIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: INPUT: gate=transportIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.wiseroute.WiseRoute: INPUT: gate=transportIn msg=inet::Request kind=1 ctrl=inet::L3SocketBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.networklayer.wiseroute.WiseRoute: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::L3AddressReq,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq
inet.networklayer.wiseroute.WiseRoute: OUTPUT: gate=queueOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: OUTPUT: gate=transportOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketInd
inet.networklayer.wiseroute.WiseRoute: PACKET: insertAtBack inet::SequenceChunk
inet.networklayer.wiseroute.WiseRoute: PACKET: insertAtFront inet::WiseRouteHeader
inet.networklayer.wiseroute.WiseRoute: PACKET: popAtFront inet::WiseRouteHeader
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::InterfaceReq
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::L3AddressInd
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::MacAddressReq
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: TAG: addTagIfAbsent inet::SocketInd
inet.networklayer.wiseroute.WiseRoute: TAG: findTag inet::Ipv4InterfaceData
inet.networklayer.wiseroute.WiseRoute: TAG: findTag inet::Ipv6InterfaceData
inet.networklayer.wiseroute.WiseRoute: TAG: findTag inet::L3AddressReq
inet.networklayer.wiseroute.WiseRoute: TAG: findTag inet::NextHopInterfaceData
inet.networklayer.wiseroute.WiseRoute: TAG: getTag inet::L3AddressInd
inet.networklayer.wiseroute.WiseRoute: TAG: getTag inet::PacketProtocolTag
inet.networklayer.wiseroute.WiseRoute: TAG: getTag inet::SocketReq
inet.physicallayer.apskradio.bitlevel.ApskLayeredScalarRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.linklayer.bmac.BMac func=inet::BMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.linklayer.csmaca.CsmaCaMac func=inet::CsmaCaMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.linklayer.ieee802154.Ieee802154Mac func=inet::Ieee802154Mac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.linklayer.xmac.XMac func=inet::XMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium: TAG: findTag inet::SignalBandReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: PACKET: insertAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: PACKET: popAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: findTag inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskDimensionalRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: CALL: module=inet.physicallayer.common.packetlevel.RadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: PACKET: insertAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskRadio: PACKET: popAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.apskradio.packetlevel.ApskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: findTag inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.bmac.BMac func=inet::BMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.csmaca.CsmaCaMac func=inet::CsmaCaMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.ieee802154.Ieee802154Mac func=inet::Ieee802154Mac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.linklayer.xmac.XMac func=inet::XMac::receiveSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.bitlevel.ApskLayeredScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadio func=inet::physicallayer::ApskRadio::setRadioMode info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: CALL: module=inet.power.storage.IdealEpEnergyStorage func=inet::power::IdealEpEnergyStorage::receiveSignal info=receiveSignal
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ChannelReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: TAG: findTag inet::SignalBandReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SnirInd,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::BitCountChunk
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::ByteCountChunk
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::CsmaCaMacAckHeader
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::CsmaCaMacDataHeader
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::CsmaCaMacTrailer
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::IcmpEchoReply
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::IcmpEchoRequest
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtBack inet::Ipv4Header
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: insertAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: PACKET: popAtFront inet::ApskPhyHeader
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: findTag inet::SnirInd
inet.physicallayer.apskradio.packetlevel.ApskScalarRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.common.packetlevel.RadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.common.packetlevel.RadioMedium: TAG: findTag inet::physicallayer::Ieee80211ChannelReq
inet.physicallayer.common.packetlevel.RadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.common.packetlevel.RadioMedium: TAG: findTag inet::SignalBandReq
inet.physicallayer.common.packetlevel.RadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.common.packetlevel.RadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.energyconsumer.SensorStateBasedEpEnergyConsumer: CALL: module=inet.power.storage.IdealEpEnergyStorage func=inet::power::IdealEpEnergyStorage::addEnergyConsumer info=addEnergyConsumer
inet.physicallayer.energyconsumer.StateBasedEpEnergyConsumer: CALL: module=inet.power.storage.IdealEpEnergyStorage func=inet::power::IdealEpEnergyStorage::addEnergyConsumer info=addEnergyConsumer
inet.physicallayer.energyconsumer.StateBasedEpEnergyConsumer: CALL: module=inet.power.storage.SimpleEpEnergyStorage func=inet::power::SimpleEpEnergyStorage::addEnergyConsumer info=addEnergyConsumer
inet.physicallayer.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: CALL: module=inet.physicallayer.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: CALL: module=inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio func=inet::physicallayer::Ieee80211OfdmRadio::setRadioMode info=<nullptr>
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: PACKET: insertAtBack inet::BitCountChunk
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: PACKET: insertAtBack inet::BytesChunk
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211OfdmPhyHeader
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: PACKET: popAtFront inet::physicallayer::Ieee80211OfdmPhyHeader
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ChannelInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee80211.bitlevel.Ieee80211OfdmRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.common.packetlevel.RadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio func=inet::physicallayer::Ieee80211Radio::setRadioMode info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ChannelReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: PACKET: insertAtBack inet::BitCountChunk
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211OfdmPhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: PACKET: popAtFront inet::physicallayer::Ieee80211PhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ChannelInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211DimensionalRadio: TAG: getTag inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp func=inet::ieee80211::Ieee80211MgmtAp::receiveSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta func=inet::ieee80211::Ieee80211MgmtSta::receiveSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.ApskScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel func=inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::setRadioMode info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: CALL: module=inet.power.storage.SimpleEpEnergyStorage func=inet::power::SimpleEpEnergyStorage::receiveSignal info=receiveSignal
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::NextHopAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::Ieee80211SubtypeReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::UserPriorityReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::Ieee802SapReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::Ieee80211ConfigureRadioCommand tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ChannelReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=2003 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: insertAtBack inet::BitCountChunk
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211DsssPhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211HrDsssPhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211HtPhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: insertAtFront inet::physicallayer::Ieee80211OfdmPhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: PACKET: popAtFront inet::physicallayer::Ieee80211PhyHeader
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ChannelInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: findTag inet::MacAddressInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio: TAG: getTag inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio func=inet::physicallayer::Radio::setRadioMode info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ChannelInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::physicallayer::Ieee80211ModeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee80211.packetlevel.Ieee80211UnitDiskRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: CALL: module=inet.linklayer.ieee802154.Ieee802154NarrowbandMac func=inet::Ieee802154Mac::receiveSignal info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: CALL: module=inet.physicallayer.common.packetlevel.RadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.linklayer.ieee802154.Ieee802154NarrowbandMac func=inet::Ieee802154Mac::receiveSignal info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeBitErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computePacketErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.physicallayer.apskradio.packetlevel.errormodel.ApskErrorModel func=inet::physicallayer::ApskErrorModel::computeSymbolErrorRate info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: CALL: module=inet.power.storage.IdealEpEnergyStorage func=inet::power::IdealEpEnergyStorage::receiveSignal info=receiveSignal
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium: TAG: findTag inet::SignalPowerReq
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: findTag inet::SnirInd
inet.physicallayer.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.neighborcache.GridNeighborCache: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=refillCellsTimer
inet.physicallayer.neighborcache.NeighborListNeighborCache: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=updateNeighborListsTimer
inet.physicallayer.neighborcache.QuadTreeNeighborCache: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=rebuildQuadTreeTimer
inet.physicallayer.shortcut.ShortcutRadio: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::receiveSignal info=<nullptr>
inet.physicallayer.shortcut.ShortcutRadio: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByNodeInputGateId info=<nullptr>
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=radioIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=radioIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=radioIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.shortcut.ShortcutRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: OUTPUTDIRECT: msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: OUTPUTDIRECT: msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.shortcut.ShortcutRadio: OUTPUTDIRECT: msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.shortcut.ShortcutRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.shortcut.ShortcutRadio: PACKET: insertAtFront inet::ShortcutPhyHeader
inet.physicallayer.shortcut.ShortcutRadio: PACKET: popAtFront inet::ShortcutPhyHeader
inet.physicallayer.shortcut.ShortcutRadio: TAG: getTag inet::MacAddressReq
inet.physicallayer.shortcut.ShortcutRadio: TAG: getTag inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.common.packet.recorder.PcapRecorder func=inet::PcapRecorder::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.bmac.BMac func=inet::BMac::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.csmaca.CsmaCaMac func=inet::CsmaCaMac::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::receiveSignal info=receiveSignal
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.ieee802154.Ieee802154Mac func=inet::Ieee802154Mac::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.linklayer.xmac.XMac func=inet::XMac::receiveSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::setRadioMode info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadioMedium func=inet::physicallayer::RadioMedium::createTransmitterSignal info=<nullptr>
inet.physicallayer.unitdisk.UnitDiskRadio: CALL: module=inet.power.storage.IdealEpEnergyStorage func=inet::power::IdealEpEnergyStorage::receiveSignal info=receiveSignal
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=radioIn msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::ErrorRateInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::MulticastReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressInd,inet::MacAddressReq,inet::PacketProtocolTag,inet::ieee80211::LlcProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::MacAddressInd,inet::PacketProtocolTag,inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceReq,inet::MacAddressReq,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SocketReq
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::InterfaceReq,inet::MacAddressReq,inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: INPUT: gate=upperLayerIn msg=inet::Request kind=1 ctrl=inet::physicallayer::ConfigureRadioCommand tags=
inet.physicallayer.unitdisk.UnitDiskRadioMedium: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=removeNonInterferingTransmissions
inet.physicallayer.unitdisk.UnitDiskRadioMedium: TAG: findTag inet::physicallayer::Ieee80211ModeReq
inet.physicallayer.unitdisk.UnitDiskRadioMedium: TAG: findTag inet::SignalBitrateReq
inet.physicallayer.unitdisk.UnitDiskRadio: OUTPUTDIRECT: msg=inet::physicallayer::Signal kind=0 ctrl=<null> tags=
inet.physicallayer.unitdisk.UnitDiskRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.unitdisk.UnitDiskRadio: OUTPUT: gate=upperLayerOut msg=inet::Packet kind=192 ctrl=<null> tags=inet::ErrorRateInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.physicallayer.unitdisk.UnitDiskRadio: PACKET: insertAtFront inet::UnitDiskPhyHeader
inet.physicallayer.unitdisk.UnitDiskRadio: PACKET: popAtFront inet::UnitDiskPhyHeader
inet.physicallayer.unitdisk.UnitDiskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::physicallayer::Signal tags= msgname=receptionTimer
inet.physicallayer.unitdisk.UnitDiskRadio: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=transmissionTimer
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTagIfAbsent inet::ErrorRateInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTagIfAbsent inet::SignalPowerInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTagIfAbsent inet::SignalTimeInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTagIfAbsent inet::SnirInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: addTag inet::PacketProtocolTag
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: findTag inet::ErrorRateInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: findTag inet::SnirInd
inet.physicallayer.unitdisk.UnitDiskRadio: TAG: getTag inet::PacketProtocolTag
inet.power.generator.AlternatingEpEnergyGenerator: CALL: module=inet.power.storage.SimpleEpEnergyStorage func=inet::power::SimpleEpEnergyStorage::addEnergyGenerator info=addEnergyGenerator
inet.power.generator.AlternatingEpEnergyGenerator: CALL: module=inet.power.storage.SimpleEpEnergyStorage func=inet::power::SimpleEpEnergyStorage::receiveSignal info=receiveSignal
inet.power.generator.AlternatingEpEnergyGenerator: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.applications.pingapp.PingApp func=inet::PingApp::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc func=inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.power.management.SimpleEpEnergyManagement: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=lifecycleOperation
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.applications.pingapp.PingApp func=inet::PingApp::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc func=inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.power.management.SimpleEpEnergyManagement func=inet::power::SimpleEpEnergyManagement::receiveSignal info=receiveSignal
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.power.storage.SimpleEpEnergyStorage: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=timer
inet.queueing.common.PacketMultiplexer: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.queueing.common.PacketMultiplexer: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::InterfaceInd,inet::InterfaceReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.queueing.common.PacketMultiplexer: OUTPUT: gate=out msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag
inet.queueing.queue.DropTailQueue: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.queueing.queue.DropTailQueue: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.queueing.scheduler.PriorityScheduler: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::receiveSignal info=<nullptr>
inet.queueing.scheduler.PriorityScheduler: CALL: module=inet.linklayer.ethernet.EtherMac func=inet::EtherMac::receiveSignal info=<nullptr>
inet.queueing.sink.PassivePacketSink: INPUT: gate=in msg=inet::Packet kind=2003 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::InterfaceInd,inet::MacAddressInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.queueing.sink.PassivePacketSink: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=ConsumptionTimer
inet.routing.aodv.Aodv: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::dropQueuedDatagram info=dropQueuedDatagram()
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::reinjectQueuedDatagram info=reinjectDatagram()
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.routing.aodv.Aodv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.routing.aodv.Aodv: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.aodv.Aodv: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd
inet.routing.aodv.Aodv: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd
inet.routing.aodv.Aodv: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.routing.aodv.Aodv: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.aodv.Aodv: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.aodv.Aodv: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetBroadcastCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.aodv.Aodv: PACKET: insertAtBack inet::aodv::Rerr
inet.routing.aodv.Aodv: PACKET: insertAtBack inet::aodv::Rrep
inet.routing.aodv.Aodv: PACKET: insertAtBack inet::aodv::Rreq
inet.routing.aodv.Aodv: PACKET: popAtFront inet::aodv::AodvControlPacket
inet.routing.aodv.Aodv: SCHEDULE:  msg=inet::aodv::PacketHolderMessage kind=100 ctrl=<null> tags= msgname=aodv-send-jitter
inet.routing.aodv.Aodv: SCHEDULE:  msg=inet::aodv::WaitForRrep kind=0 ctrl=<null> tags= msgname=
inet.routing.aodv.Aodv: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=BlackListTimer
inet.routing.aodv.Aodv: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=CounterTimer
inet.routing.aodv.Aodv: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=ExpungeTimer
inet.routing.aodv.Aodv: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=RrepAckTimer
inet.routing.aodv.Aodv: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.aodv.Aodv: TAG: addTagIfAbsent inet::SocketReq
inet.routing.aodv.Aodv: TAG: addTag inet::HopLimitReq
inet.routing.aodv.Aodv: TAG: addTag inet::InterfaceReq
inet.routing.aodv.Aodv: TAG: addTag inet::L3AddressReq
inet.routing.aodv.Aodv: TAG: addTag inet::L4PortReq
inet.routing.aodv.Aodv: TAG: findTag inet::NetworkProtocolInd
inet.routing.aodv.Aodv: TAG: findTag inet::SocketInd
inet.routing.aodv.Aodv: TAG: getTag inet::HopLimitInd
inet.routing.aodv.Aodv: TAG: getTag inet::L3AddressInd
inet.routing.bgpv4.Bgp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.bgpv4.Bgp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.bgpv4.Bgp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.bgpv4.Bgp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.routing.bgpv4.Bgp: CALL: module=inet.routing.ospfv2.Ospfv2 func=inet::ospfv2::Ospfv2::checkExternalRoute info=<nullptr>
inet.routing.bgpv4.Bgp: CALL: module=inet.routing.ospfv2.Ospfv2 func=inet::ospfv2::Ospfv2::insertExternalRoute info=<nullptr>
inet.routing.bgpv4.Bgp: INPUT: gate=socketIn msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.routing.bgpv4.Bgp: INPUT: gate=socketIn msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.routing.bgpv4.Bgp: INPUT: gate=socketIn msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.routing.bgpv4.Bgp: INPUT: gate=socketIn msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.routing.bgpv4.Bgp: INPUT: gate=socketIn msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Request kind=11 ctrl=inet::TcpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: OUTPUT: gate=socketOut msg=inet::Request kind=6 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.bgpv4.Bgp: PACKET: insertAtFront inet::bgp::BgpKeepAliveMessage
inet.routing.bgpv4.Bgp: PACKET: insertAtFront inet::bgp::BgpOpenMessage
inet.routing.bgpv4.Bgp: PACKET: insertAtFront inet::bgp::BgpUpdateMessage
inet.routing.bgpv4.Bgp: PACKET: popAtFront inet::bgp::BgpHeader
inet.routing.bgpv4.Bgp: SCHEDULE:  msg=omnetpp::cMessage kind=81 ctrl=<null> tags= msgname=BGP Start
inet.routing.bgpv4.Bgp: SCHEDULE:  msg=omnetpp::cMessage kind=82 ctrl=<null> tags= msgname=BGP Connect Retry
inet.routing.bgpv4.Bgp: SCHEDULE:  msg=omnetpp::cMessage kind=83 ctrl=<null> tags= msgname=BGP Hold Timer
inet.routing.bgpv4.Bgp: SCHEDULE:  msg=omnetpp::cMessage kind=89 ctrl=<null> tags= msgname=BGP Keep Alive Timer
inet.routing.bgpv4.Bgp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.bgpv4.Bgp: TAG: addTagIfAbsent inet::SocketReq
inet.routing.bgpv4.Bgp: TAG: findTag inet::SocketInd
inet.routing.bgpv4.Bgp: TAG: getTag inet::Ipv4InterfaceData
inet.routing.bgpv4.Bgp: TAG: getTag inet::SocketInd
inet.routing.dsdv.Dsdv: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.dsdv.Dsdv: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.dsdv.Dsdv: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.dsdv.Dsdv: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.dsdv.Dsdv: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.dsdv.Dsdv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.dsdv.Dsdv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.dsdv.Dsdv: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.routing.dsdv.Dsdv: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.dsdv.Dsdv: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.dsdv.Dsdv: PACKET: insertAtBack inet::DsdvHello
inet.routing.dsdv.Dsdv: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=event
inet.routing.dsdv.Dsdv: TAG: addTag inet::DispatchProtocolReq
inet.routing.dsdv.Dsdv: TAG: addTag inet::InterfaceReq
inet.routing.dsdv.Dsdv: TAG: addTag inet::L3AddressReq
inet.routing.dsdv.Dsdv: TAG: addTag inet::PacketProtocolTag
inet.routing.dsdv.Dsdv: TAG: getTag inet::Ipv4InterfaceData
inet.routing.dsdv.Dsdv: TAG: getTag inet::PacketProtocolTag
inet.routing.dymo.Dymo: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.dymo.Dymo: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.dymo.Dymo: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::reinjectQueuedDatagram info=reinjectDatagram()
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::removeRoute info=removeRoute(...)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::registerHook info=registerHook()
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::doLongestPrefixMatch info=doLongestPrefixMatch(%s)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::isLocalAddress info=isLocalAddress(%s) y/n
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::registerHook info=registerHook()
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::reinjectQueuedDatagram info=reinjectDatagram()
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.nexthop.NextHopRoutingTable func=inet::NextHopRoutingTable::addRoute info=addRoute(...)
inet.routing.dymo.Dymo: CALL: module=inet.networklayer.nexthop.NextHopRoutingTable func=inet::NextHopRoutingTable::removeRoute info=removeRoute(...)
inet.routing.dymo.Dymo: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.dymo.Dymo: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.dymo.Dymo: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.dymo.Dymo: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.dymo.Dymo: PACKET: insertAtBack inet::dymo::Rerr
inet.routing.dymo.Dymo: PACKET: insertAtBack inet::dymo::Rrep
inet.routing.dymo.Dymo: PACKET: insertAtBack inet::dymo::Rreq
inet.routing.dymo.Dymo: PACKET: insertAtFront inet::UdpHeader
inet.routing.dymo.Dymo: PACKET: popAtFront inet::UdpHeader
inet.routing.dymo.Dymo: SCHEDULE:  msg=inet::dymo::RreqBackoffTimer kind=0 ctrl=<null> tags= msgname=RreqBackoffTimer
inet.routing.dymo.Dymo: SCHEDULE:  msg=inet::dymo::RreqWaitRrepTimer kind=0 ctrl=<null> tags= msgname=RreqWaitRrepTimer
inet.routing.dymo.Dymo: TAG: addTag inet::DispatchProtocolReq
inet.routing.dymo.Dymo: TAG: addTag inet::HopLimitReq
inet.routing.dymo.Dymo: TAG: addTag inet::InterfaceReq
inet.routing.dymo.Dymo: TAG: addTag inet::L3AddressReq
inet.routing.dymo.Dymo: TAG: addTag inet::PacketProtocolTag
inet.routing.dymo.Dymo: TAG: findTag inet::NetworkProtocolInd
inet.routing.dymo.Dymo: TAG: getTag inet::HopLimitInd
inet.routing.dymo.Dymo: TAG: getTag inet::InterfaceInd
inet.routing.dymo.Dymo: TAG: getTag inet::Ipv4InterfaceData
inet.routing.dymo.Dymo: TAG: getTag inet::Ipv6InterfaceData
inet.routing.dymo.Dymo: TAG: getTag inet::L3AddressInd
inet.routing.dymo.Dymo: TAG: getTag inet::NextHopInterfaceData
inet.routing.gpsr.Gpsr: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.gpsr.Gpsr: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.gpsr.Gpsr: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::registerHook info=registerHook()
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::isLocalAddress info=isLocalAddress(%s) y/n
inet.routing.gpsr.Gpsr: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::registerHook info=registerHook()
inet.routing.gpsr.Gpsr: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.gpsr.Gpsr: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.routing.gpsr.Gpsr: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.gpsr.Gpsr: PACKET: insertAtBack inet::GpsrBeacon
inet.routing.gpsr.Gpsr: PACKET: insertAtFront inet::Ipv4Header
inet.routing.gpsr.Gpsr: PACKET: insertAtFront inet::Ipv6Header
inet.routing.gpsr.Gpsr: PACKET: insertAtFront inet::NextHopForwardingHeader
inet.routing.gpsr.Gpsr: PACKET: insertAtFront inet::UdpHeader
inet.routing.gpsr.Gpsr: PACKET: popAtFront inet::Ipv4Header
inet.routing.gpsr.Gpsr: PACKET: popAtFront inet::Ipv6Header
inet.routing.gpsr.Gpsr: PACKET: popAtFront inet::NextHopForwardingHeader
inet.routing.gpsr.Gpsr: PACKET: popAtFront inet::UdpHeader
inet.routing.gpsr.Gpsr: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=BeaconTimer
inet.routing.gpsr.Gpsr: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.gpsr.Gpsr: TAG: addTagIfAbsent inet::NetworkProtocolInd
inet.routing.gpsr.Gpsr: TAG: addTagIfAbsent inet::NextHopAddressReq
inet.routing.gpsr.Gpsr: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.routing.gpsr.Gpsr: TAG: addTag inet::DispatchProtocolReq
inet.routing.gpsr.Gpsr: TAG: addTag inet::HopLimitReq
inet.routing.gpsr.Gpsr: TAG: addTag inet::L3AddressReq
inet.routing.gpsr.Gpsr: TAG: addTag inet::PacketProtocolTag
inet.routing.gpsr.Gpsr: TAG: findTag inet::Ipv6InterfaceData
inet.routing.gpsr.Gpsr: TAG: findTag inet::NetworkProtocolInd
inet.routing.gpsr.Gpsr: TAG: getTag inet::Ipv4InterfaceData
inet.routing.gpsr.Gpsr: TAG: getTag inet::Ipv6InterfaceData
inet.routing.gpsr.Gpsr: TAG: getTag inet::NextHopInterfaceData
inet.routing.ospfv2.Ospfv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.ospfv2.Ospfv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.ospfv2.Ospfv2: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.ospfv2.Ospfv2: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.routing.ospfv2.Ospfv2: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.ospfv2.Ospfv2: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.ospfv2.Ospfv2: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.ospfv2.Ospfv2: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.ospfv2.Ospfv2: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.ospfv2.Ospfv2: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.ospfv2.Ospfv2: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.ospfv2.Ospfv2: PACKET: insertAtBack inet::ospfv2::Ospfv2DatabaseDescriptionPacket
inet.routing.ospfv2.Ospfv2: PACKET: insertAtBack inet::ospfv2::Ospfv2HelloPacket
inet.routing.ospfv2.Ospfv2: PACKET: insertAtBack inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket
inet.routing.ospfv2.Ospfv2: PACKET: insertAtBack inet::ospfv2::Ospfv2LinkStateRequestPacket
inet.routing.ospfv2.Ospfv2: PACKET: insertAtBack inet::ospfv2::Ospfv2LinkStateUpdatePacket
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=Interface::InterfaceHelloTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=Interface::InterfaceWaitTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=Interface::InterfaceAcknowledgementTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=4 ctrl=<null> tags= msgname=Neighbor::NeighborInactivityTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=6 ctrl=<null> tags= msgname=Neighbor::NeighborDDRetransmissionTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=7 ctrl=<null> tags= msgname=Neighbor::Neighbor::NeighborUpdateRetransmissionTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=8 ctrl=<null> tags= msgname=Neighbor::NeighborRequestRetransmissionTimer
inet.routing.ospfv2.Ospfv2: SCHEDULE:  msg=omnetpp::cMessage kind=9 ctrl=<null> tags= msgname=Router::DatabaseAgeTimer
inet.routing.ospfv2.Ospfv2: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.ospfv2.Ospfv2: TAG: addTagIfAbsent inet::HopLimitReq
inet.routing.ospfv2.Ospfv2: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.ospfv2.Ospfv2: TAG: addTagIfAbsent inet::L3AddressReq
inet.routing.ospfv2.Ospfv2: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.routing.ospfv2.Ospfv2: TAG: findTag inet::Ipv4InterfaceData
inet.routing.ospfv2.Ospfv2: TAG: getTag inet::InterfaceInd
inet.routing.ospfv2.Ospfv2: TAG: getTag inet::Ipv4InterfaceData
inet.routing.ospfv2.Ospfv2: TAG: getTag inet::L3AddressInd
inet.routing.ospfv2.Ospfv2: TAG: getTag inet::PacketProtocolTag
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.ospfv3.Ospfv3Splitter: CALL: module=inet.routing.ospfv3.process.Ospfv3Process func=inet::ospfv3::Ospfv3Process::activateProcess info=<nullptr>
inet.routing.ospfv3.Ospfv3Splitter: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.ospfv3.Ospfv3Splitter: INPUT: gate=processIn[] msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.ospfv3.Ospfv3Splitter: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.ospfv3.Ospfv3Splitter: OUTPUT: gate=processOut[] msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.ospfv3.Ospfv3Splitter: TAG: findTag inet::Ipv6InterfaceData
inet.routing.ospfv3.Ospfv3Splitter: TAG: getTag inet::InterfaceInd
inet.routing.ospfv3.Ospfv3Splitter: TAG: getTag inet::PacketProtocolTag
inet.routing.ospfv3.process.Ospfv3Process: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::getInterfaceByName info=<nullptr>
inet.routing.ospfv3.process.Ospfv3Process: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.ospfv3.process.Ospfv3Process: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.ospfv3.process.Ospfv3Process: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.ospfv3.process.Ospfv3Process: INPUT: gate=splitterIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.ospfv3.process.Ospfv3Process: OUTPUT: gate=splitterOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.ospfv3.process.Ospfv3Process: PACKET: insertAtBack inet::ospfv3::Ospfv3DatabaseDescriptionPacket
inet.routing.ospfv3.process.Ospfv3Process: PACKET: insertAtBack inet::ospfv3::Ospfv3HelloPacket
inet.routing.ospfv3.process.Ospfv3Process: PACKET: insertAtBack inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket
inet.routing.ospfv3.process.Ospfv3Process: PACKET: insertAtBack inet::ospfv3::Ospfv3LinkStateRequestPacket
inet.routing.ospfv3.process.Ospfv3Process: PACKET: insertAtBack inet::ospfv3::Ospfv3LinkStateUpdatePacket
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=10 ctrl=<null> tags= msgname=
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=OspfvNInterface::HelloTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=2 ctrl=<null> tags= msgname=OspfvNInterface::WaitTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=OspfvNNeighbor::NeighborInactivityTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=OspfvNNeighbor::NeighborDDRetransmissionTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=6 ctrl=<null> tags= msgname=OspfvNNeighbor::Neighbor::NeighborUpdateRetransmissionTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=7 ctrl=<null> tags= msgname=OspfvNsNeighbor::NeighborRequestRetransmissionTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=8 ctrl=<null> tags= msgname=OspfvNInterface::AcknowledgementTimer
inet.routing.ospfv3.process.Ospfv3Process: SCHEDULE:  msg=omnetpp::cMessage kind=9 ctrl=<null> tags= msgname=OspfvNProcess::DatabaseAgeTimer
inet.routing.ospfv3.process.Ospfv3Process: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.ospfv3.process.Ospfv3Process: TAG: addTagIfAbsent inet::HopLimitReq
inet.routing.ospfv3.process.Ospfv3Process: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.ospfv3.process.Ospfv3Process: TAG: addTagIfAbsent inet::L3AddressReq
inet.routing.ospfv3.process.Ospfv3Process: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.routing.ospfv3.process.Ospfv3Process: TAG: findTag inet::Ipv4InterfaceData
inet.routing.ospfv3.process.Ospfv3Process: TAG: findTag inet::Ipv6InterfaceData
inet.routing.ospfv3.process.Ospfv3Process: TAG: getTag inet::InterfaceInd
inet.routing.ospfv3.process.Ospfv3Process: TAG: getTag inet::L3AddressInd
inet.routing.ospfv3.process.Ospfv3Process: TAG: getTag inet::PacketProtocolTag
inet.routing.pim.modes.PimDm: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.pim.modes.PimDm: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.pim.modes.PimDm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addMulticastRoute info=addMulticastRoute(...)
inet.routing.pim.modes.PimDm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.routing.pim.modes.PimDm: CALL: module=inet.routing.pim.tables.PimNeighborTable func=inet::PimNeighborTable::addNeighbor info=<nullptr>
inet.routing.pim.modes.PimDm: CALL: module=inet.routing.pim.tables.PimNeighborTable func=inet::PimNeighborTable::restartLivenessTimer info=<nullptr>
inet.routing.pim.modes.PimDm: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.modes.PimDm: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.pim.modes.PimDm: PACKET: insertAtFront inet::PimAssert
inet.routing.pim.modes.PimDm: PACKET: insertAtFront inet::PimGraft
inet.routing.pim.modes.PimDm: PACKET: insertAtFront inet::PimHello
inet.routing.pim.modes.PimDm: PACKET: insertAtFront inet::PimJoinPrune
inet.routing.pim.modes.PimDm: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=PIM HelloTimer
inet.routing.pim.modes.PimDm: SCHEDULE:  msg=omnetpp::cMessage kind=3 ctrl=<null> tags= msgname=PimAssertTimer
inet.routing.pim.modes.PimDm: SCHEDULE:  msg=omnetpp::cMessage kind=4 ctrl=<null> tags= msgname=PimPruneTimer
inet.routing.pim.modes.PimDm: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=PimPrunePendingTimer
inet.routing.pim.modes.PimDm: SCHEDULE:  msg=omnetpp::cMessage kind=7 ctrl=<null> tags= msgname=PIMOverrideTimer
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::HopLimitReq
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::L3AddressReq
inet.routing.pim.modes.PimDm: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.routing.pim.modes.PimDm: TAG: addTag inet::DispatchProtocolInd
inet.routing.pim.modes.PimDm: TAG: addTag inet::DispatchProtocolReq
inet.routing.pim.modes.PimDm: TAG: addTag inet::HopLimitReq
inet.routing.pim.modes.PimDm: TAG: addTag inet::InterfaceReq
inet.routing.pim.modes.PimDm: TAG: addTag inet::L3AddressReq
inet.routing.pim.modes.PimDm: TAG: addTag inet::PacketProtocolTag
inet.routing.pim.modes.PimDm: TAG: getTag inet::InterfaceInd
inet.routing.pim.modes.PimDm: TAG: getTag inet::Ipv4InterfaceData
inet.routing.pim.modes.PimDm: TAG: getTag inet::L3AddressInd
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addMulticastRoute info=addMulticastRoute(...)
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::findBestMatchingRoute info=findBestMatchingRoute(%u.%u.%u.%u)
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.routing.pim.modes.PimSm: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.routing.pim.modes.PimSm: CALL: module=inet.routing.pim.modes.PimSm func=inet::PimSm::receiveSignal info=<nullptr>
inet.routing.pim.modes.PimSm: CALL: module=inet.routing.pim.tables.PimNeighborTable func=inet::PimNeighborTable::addNeighbor info=<nullptr>
inet.routing.pim.modes.PimSm: CALL: module=inet.routing.pim.tables.PimNeighborTable func=inet::PimNeighborTable::restartLivenessTimer info=<nullptr>
inet.routing.pim.modes.PimSm: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.modes.PimSm: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.pim.modes.PimSm: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::HopLimitReq,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::L3AddressReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.modes.PimSm: PACKET: insertAtBack inet::Ipv4Header
inet.routing.pim.modes.PimSm: PACKET: insertAtBack inet::SequenceChunk
inet.routing.pim.modes.PimSm: PACKET: insertAtFront inet::PimHello
inet.routing.pim.modes.PimSm: PACKET: insertAtFront inet::PimJoinPrune
inet.routing.pim.modes.PimSm: PACKET: insertAtFront inet::PimRegister
inet.routing.pim.modes.PimSm: PACKET: insertAtFront inet::PimRegisterStop
inet.routing.pim.modes.PimSm: PACKET: popAtFront inet::Ipv4Header
inet.routing.pim.modes.PimSm: PACKET: popAtFront inet::PimRegister
inet.routing.pim.modes.PimSm: SCHEDULE:  msg=omnetpp::cMessage kind=12 ctrl=<null> tags= msgname=PIMRegisterStopTimer
inet.routing.pim.modes.PimSm: SCHEDULE:  msg=omnetpp::cMessage kind=14 ctrl=<null> tags= msgname=PIMJoinTimer
inet.routing.pim.modes.PimSm: SCHEDULE:  msg=omnetpp::cMessage kind=1 ctrl=<null> tags= msgname=PIM HelloTimer
inet.routing.pim.modes.PimSm: SCHEDULE:  msg=omnetpp::cMessage kind=5 ctrl=<null> tags= msgname=PIMPrunePendingTimer
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::DispatchProtocolInd
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::HopLimitReq
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::L3AddressReq
inet.routing.pim.modes.PimSm: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.routing.pim.modes.PimSm: TAG: addTag inet::DispatchProtocolInd
inet.routing.pim.modes.PimSm: TAG: addTag inet::DispatchProtocolReq
inet.routing.pim.modes.PimSm: TAG: addTag inet::HopLimitReq
inet.routing.pim.modes.PimSm: TAG: addTag inet::InterfaceReq
inet.routing.pim.modes.PimSm: TAG: addTag inet::L3AddressReq
inet.routing.pim.modes.PimSm: TAG: addTag inet::PacketProtocolTag
inet.routing.pim.modes.PimSm: TAG: getTag inet::InterfaceInd
inet.routing.pim.modes.PimSm: TAG: getTag inet::Ipv4InterfaceData
inet.routing.pim.modes.PimSm: TAG: getTag inet::L3AddressInd
inet.routing.pim.Pim: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.routing.pim.Pim: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.routing.pim.PimSplitter: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.pim.PimSplitter: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: INPUT: gate=pimDMIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: INPUT: gate=pimSMIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: INPUT: gate=pimSMIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::HopLimitReq,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::L3AddressReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::HopLimitReq,inet::InterfaceInd,inet::InterfaceReq,inet::L3AddressInd,inet::L3AddressReq,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: OUTPUT: gate=pimDMOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: OUTPUT: gate=pimSMOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.routing.pim.PimSplitter: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.pim.PimSplitter: TAG: getTag inet::InterfaceInd
inet.routing.pim.PimSplitter: TAG: getTag inet::PacketProtocolTag
inet.routing.pim.tables.PimNeighborTable: CALL: module=inet.routing.pim.modes.PimSm func=inet::PimSm::receiveSignal info=<nullptr>
inet.routing.pim.tables.PimNeighborTable: CALL: module=inet.routing.pim.tables.PimNeighborTable func=inet::PimNeighborTable::restartLivenessTimer info=<nullptr>
inet.routing.rip.Rip: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.routing.rip.Rip: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.routing.rip.Rip: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.linklayer.ppp.Ppp func=inet::Ppp::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::addRoute info=addRoute(...)
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::deleteRoute info=deleteRoute(...)
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::isLocalAddress info=isLocalAddress(%u.%u.%u.%u)
inet.routing.rip.Rip: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::isLocalAddress info=isLocalAddress(%s) y/n
inet.routing.rip.Rip: CALL: module=inet.routing.rip.Rip func=inet::Rip::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: CALL: module=inet.routing.rip.Rip func=inet::Rip::receiveSignal info=Rip::receiveChangeNotification(%s)
inet.routing.rip.Rip: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.routing.rip.Rip: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.routing.rip.Rip: INPUT: gate=socketIn msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.routing.rip.Rip: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.routing.rip.Rip: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.routing.rip.Rip: INPUT: gate=socketIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetMulticastLoopCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.rip.Rip: OUTPUT: gate=socketOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.routing.rip.Rip: PACKET: insertAtBack inet::RipPacket
inet.routing.rip.Rip: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=RIP-shutdown
inet.routing.rip.Rip: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=RIP-startup
inet.routing.rip.Rip: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=RIP-timer
inet.routing.rip.Rip: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=RIP-trigger
inet.routing.rip.Rip: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.routing.rip.Rip: TAG: addTagIfAbsent inet::InterfaceReq
inet.routing.rip.Rip: TAG: addTagIfAbsent inet::L3AddressReq
inet.routing.rip.Rip: TAG: addTagIfAbsent inet::L4PortReq
inet.routing.rip.Rip: TAG: addTagIfAbsent inet::SocketReq
inet.routing.rip.Rip: TAG: findTag inet::Ipv4InterfaceData
inet.routing.rip.Rip: TAG: findTag inet::Ipv6InterfaceData
inet.routing.rip.Rip: TAG: getTag inet::HopLimitInd
inet.routing.rip.Rip: TAG: getTag inet::InterfaceInd
inet.routing.rip.Rip: TAG: getTag inet::L3AddressInd
inet.routing.rip.Rip: TAG: getTag inet::L4PortInd
inet.transportlayer.rtp.Rtcp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.rtp.Rtcp: INPUT: gate=rtpIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtcp: INPUT: gate=udpIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.rtp.Rtcp: OUTPUT: gate=rtpOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtcp: OUTPUT: gate=udpOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.transportlayer.rtp.Rtcp: OUTPUT: gate=udpOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.rtp.Rtcp: OUTPUT: gate=udpOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.rtp.Rtcp: PACKET: insertAtBack inet::rtp::RtcpByePacket
inet.transportlayer.rtp.Rtcp: PACKET: insertAtBack inet::rtp::RtcpReceiverReportPacket
inet.transportlayer.rtp.Rtcp: PACKET: insertAtBack inet::rtp::RtcpSdesPacket
inet.transportlayer.rtp.Rtcp: PACKET: insertAtBack inet::rtp::RtcpSenderReportPacket
inet.transportlayer.rtp.Rtcp: PACKET: popAtFront inet::rtp::RtcpPacket
inet.transportlayer.rtp.Rtcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=Interval
inet.transportlayer.rtp.Rtcp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.transportlayer.rtp.Rtcp: TAG: addTagIfAbsent inet::L3AddressReq
inet.transportlayer.rtp.Rtcp: TAG: addTagIfAbsent inet::L4PortReq
inet.transportlayer.rtp.Rtcp: TAG: addTagIfAbsent inet::SocketReq
inet.transportlayer.rtp.Rtcp: TAG: findTag inet::Ipv4InterfaceData
inet.transportlayer.rtp.RtpAvProfile: INPUT: gate=payloadSenderIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfile: INPUT: gate=rtpIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfile: OUTPUT: gate=payloadReceiverOut[] msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfile: OUTPUT: gate=payloadSenderOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfile: OUTPUT: gate=rtpOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfilePayload32Receiver: INPUT: gate=profileIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfilePayload32Receiver: PACKET: popAtFront inet::rtp::RtpHeader
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: INPUT: gate=profileIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: OUTPUT: gate=profileOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: PACKET: insertAtBack inet::ByteCountChunk
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: PACKET: insertAtBack inet::rtp::RtpMpegHeader
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: PACKET: insertAtFront inet::rtp::RtpHeader
inet.transportlayer.rtp.RtpAvProfilePayload32Sender: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=nextFrame
inet.transportlayer.rtp.Rtp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.rtp.Rtp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.transportlayer.rtp.Rtp: INPUT: gate=appIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiCreateSenderModule tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=appIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiEnterSession tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=appIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiLeaveSession tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=appIn msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderControl tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=profileIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=rtcpIn msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtp: INPUT: gate=udpIn msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.rtp.Rtp: OUTPUT: gate=appOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderModuleCreated tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=appOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSenderStatus tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=appOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSessionEntered tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=appOut msg=inet::rtp::RtpControlMsg kind=0 ctrl=inet::rtp::RtpCiSessionLeft tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=profileOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=rtcpOut msg=inet::rtp::RtpInnerPacket kind=0 ctrl=<null> tags=
inet.transportlayer.rtp.Rtp: OUTPUT: gate=udpOut msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.transportlayer.rtp.Rtp: OUTPUT: gate=udpOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.rtp.Rtp: OUTPUT: gate=udpOut msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.rtp.Rtp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.transportlayer.rtp.Rtp: TAG: addTagIfAbsent inet::L3AddressReq
inet.transportlayer.rtp.Rtp: TAG: addTagIfAbsent inet::L4PortReq
inet.transportlayer.rtp.Rtp: TAG: addTagIfAbsent inet::SocketReq
inet.transportlayer.rtp.Rtp: TAG: findTag inet::Ipv4InterfaceData
inet.transportlayer.sctp.Sctp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.sctp.Sctp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.transportlayer.sctp.Sctp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.transportlayer.sctp.Sctp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.transportlayer.sctp.Sctp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::getInterfaceForDestAddr info=getInterfaceForDestAddr(%u.%u.%u.%u)
inet.transportlayer.sctp.Sctp: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::registerHook info=registerHook()
inet.transportlayer.sctp.Sctp: CALL: module=inet.networklayer.ipv6.Ipv6RoutingTable func=inet::Ipv6RoutingTable::doLongestPrefixMatch info=doLongestPrefixMatch(%s)
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Packet kind=3 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Packet kind=8 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Packet kind=9 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=12 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpInfoReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=13 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpInfoReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=14 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=15 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=1 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=22 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=25 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpAvailableReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=2 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpOpenReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=5 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=6 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpCommandReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=6 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=appIn msg=inet::Request kind=8 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SctpSendReq,inet::SocketReq
inet.transportlayer.sctp.Sctp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.sctp.Sctp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=10 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=12 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=13 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=14 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=15 ctrl=<null> tags=inet::SctpSendQueueAbatedReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=21 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=22 ctrl=<null> tags=inet::SctpAvailableReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=2 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=3 ctrl=<null> tags=inet::SctpConnectReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=4 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Indication kind=5 ctrl=<null> tags=inet::SctpCommandReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=appOut msg=inet::Packet kind=1 ctrl=<null> tags=inet::SctpRcvReq,inet::SocketInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::SocketReq,inet::TransportProtocolInd
inet.transportlayer.sctp.Sctp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.sctp.Sctp: PACKET: insertAtBack inet::BytesChunk
inet.transportlayer.sctp.Sctp: PACKET: insertAtFront inet::sctp::SctpHeader
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=CWND_TIMER N:NN.N.N.N
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=HB_INT_TIMER N:NN.N.N.N
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=HB_INT_TIMER NN:NN.N.N.N
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=HB_INT_TIMER NN:NN.N.N.NN
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=HB_TIMER NN:NN.N.N.N
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=RTX_TIMER N:NN.N.N.N
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=RTX_TIMER NN:NN.N.N.NN
inet.transportlayer.sctp.Sctp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=inet::SctpPathInfo tags= msgname=SACK_TIMER of assoc NN
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::L3AddressReq
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::SocketInd
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::SocketReq
inet.transportlayer.sctp.Sctp: TAG: addTagIfAbsent inet::TransportProtocolInd
inet.transportlayer.sctp.Sctp: TAG: addTag inet::DispatchProtocolReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::L3AddressReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SctpAvailableReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SctpCommandReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SctpConnectReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SctpRcvReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SctpSendQueueAbatedReq
inet.transportlayer.sctp.Sctp: TAG: addTag inet::SocketInd
inet.transportlayer.sctp.Sctp: TAG: findTag inet::InterfaceReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::Ipv4InterfaceData
inet.transportlayer.sctp.Sctp: TAG: findTag inet::Ipv6InterfaceData
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpAvailableReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpCommandReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpInfoReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpOpenReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpResetReq
inet.transportlayer.sctp.Sctp: TAG: findTag inet::SctpSendReq
inet.transportlayer.sctp.Sctp: TAG: getTag inet::L3AddressInd
inet.transportlayer.sctp.Sctp: TAG: getTag inet::PacketProtocolTag
inet.transportlayer.sctp.Sctp: TAG: getTag inet::SctpSendReq
inet.transportlayer.sctp.Sctp: TAG: getTag inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.tcp_lwip.TcpLwip: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.transportlayer.tcp_lwip.TcpLwip: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.transportlayer.tcp_lwip.TcpLwip: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=appIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=appIn msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=appIn msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=appIn msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=appIn msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp_lwip.TcpLwip: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=appOut msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=appOut msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=appOut msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=appOut msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=appOut msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: PACKET: insertAtBack inet::BytesChunk
inet.transportlayer.tcp_lwip.TcpLwip: PACKET: insertAtFront inet::tcp::TcpHeader
inet.transportlayer.tcp_lwip.TcpLwip: PACKET: popAtFront inet::tcp::TcpHeader
inet.transportlayer.tcp_lwip.TcpLwip: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=lwip_fast_timer
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTagIfAbsent inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTag inet::DispatchProtocolReq
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTag inet::L3AddressReq
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTag inet::SocketInd
inet.transportlayer.tcp_lwip.TcpLwip: TAG: addTag inet::TransportProtocolInd
inet.transportlayer.tcp_lwip.TcpLwip: TAG: getTag inet::InterfaceInd
inet.transportlayer.tcp_lwip.TcpLwip: TAG: getTag inet::L3AddressInd
inet.transportlayer.tcp_lwip.TcpLwip: TAG: getTag inet::PacketProtocolTag
inet.transportlayer.tcp_lwip.TcpLwip: TAG: getTag inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.tcp_nsc.TcpNsc: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.transportlayer.tcp_nsc.TcpNsc: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.transportlayer.tcp_nsc.TcpNsc: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=appIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=appIn msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=appIn msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=appIn msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=appIn msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp_nsc.TcpNsc: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::PacketProtocolTag,inet::SocketInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=appOut msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.transportlayer.tcp_nsc.TcpNsc: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: PACKET: insertAtBack inet::BytesChunk
inet.transportlayer.tcp_nsc.TcpNsc: PACKET: insertAtFront inet::tcp::TcpHeader
inet.transportlayer.tcp_nsc.TcpNsc: PACKET: popAtFront inet::tcp::TcpHeader
inet.transportlayer.tcp_nsc.TcpNsc: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=nsc_nsi_timer
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTagIfAbsent inet::TransportProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTag inet::DispatchProtocolReq
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTag inet::L3AddressReq
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTag inet::PacketProtocolTag
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTag inet::SocketInd
inet.transportlayer.tcp_nsc.TcpNsc: TAG: addTag inet::TransportProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: TAG: getTag inet::L3AddressInd
inet.transportlayer.tcp_nsc.TcpNsc: TAG: getTag inet::NetworkProtocolInd
inet.transportlayer.tcp_nsc.TcpNsc: TAG: getTag inet::PacketProtocolTag
inet.transportlayer.tcp_nsc.TcpNsc: TAG: getTag inet::SocketReq
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.dhcp.DhcpClient func=inet::DhcpClient::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.dhcp.DhcpServer func=inet::DhcpServer::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.pingapp.PingApp func=inet::PingApp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.tcpapp.TelnetApp func=inet::TelnetApp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.udpapp.UdpBasicApp func=inet::UdpBasicApp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.udpapp.UdpBasicBurst func=inet::UdpBasicBurst::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.applications.udpapp.UdpVideoStreamClient func=inet::UdpVideoStreamClient::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.common.lifecycle.NodeStatus func=inet::NodeStatus::handleOperationStage info=<nullptr>
inet.transportlayer.tcp.Tcp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.tcp.Tcp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.transportlayer.tcp.Tcp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.acking.AckingMac func=inet::AckingMac::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ethernet.EtherEncap func=inet::EtherEncap::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ethernet.EtherMacFullDuplex func=inet::EtherMacFullDuplex::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ieee80211.llc.Ieee80211LlcLpd func=inet::ieee80211::Ieee80211LlcLpd::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ieee80211.mac.Ieee80211Mac func=inet::ieee80211::Ieee80211Mac::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc func=inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.loopback.Loopback func=inet::Loopback::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.linklayer.ppp.Ppp func=inet::Ppp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.arp.ipv4.Arp func=inet::Arp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.arp.ipv4.GlobalArp func=inet::GlobalArp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator func=inet::Ipv4NodeConfigurator::handleOperationStage info=<nullptr>
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ipv4.Ipv4RoutingTable func=inet::Ipv4RoutingTable::handleOperationStage info=<nullptr>
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::registerHook info=registerHook()
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ldp.Ldp func=inet::Ldp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.nexthop.NextHopForwarding func=inet::NextHopForwarding::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.networklayer.ted.Ted func=inet::Ted::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.physicallayer.ieee80211.packetlevel.Ieee80211ScalarRadio func=inet::physicallayer::Ieee80211Radio::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.physicallayer.unitdisk.UnitDiskRadio func=inet::physicallayer::UnitDiskRadio::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.routing.aodv.Aodv func=inet::aodv::Aodv::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.routing.dsdv.Dsdv func=inet::Dsdv::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.routing.dymo.Dymo func=inet::dymo::Dymo::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.transportlayer.tcp.Tcp func=inet::tcp::Tcp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: CALL: module=inet.transportlayer.udp.Udp func=inet::Udp::handleOperationStage info=handleOperationStage
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=11 ctrl=inet::TcpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=1 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=2 ctrl=inet::TcpOpenCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=3 ctrl=inet::TcpAcceptCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=5 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=5 ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=6 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=appIn msg=inet::Request kind=8 ctrl=inet::TcpCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::VlanInd
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: INPUT: gate=ipIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Indication kind=3 ctrl=inet::TcpAvailableInfo tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Indication kind=4 ctrl=inet::TcpConnectInfo tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Indication kind=5 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Indication kind=6 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Indication kind=8 ctrl=inet::TcpCommand tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=appOut msg=inet::Packet kind=1 ctrl=<null> tags=inet::SocketInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.tcp.Tcp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::bgp::BgpKeepAliveMessage
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::bgp::BgpOpenMessage
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::bgp::BgpUpdateMessage
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::ByteCountChunk
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::BytesChunk
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::GenericAppMsg
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::httptools::HttpReplyMessage
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::httptools::HttpRequestMessage
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::SequenceChunk
inet.transportlayer.tcp.Tcp: PACKET: insertAtBack inet::SliceChunk
inet.transportlayer.tcp.Tcp: PACKET: insertAtFront inet::tcp::TcpHeader
inet.transportlayer.tcp.Tcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=ActiveOperationExtraTimer
inet.transportlayer.tcp.Tcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=DELAYEDACK
inet.transportlayer.tcp.Tcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=NMSL
inet.transportlayer.tcp.Tcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=REXMIT
inet.transportlayer.tcp.Tcp: SCHEDULE:  msg=omnetpp::cMessage kind=0 ctrl=<null> tags= msgname=SYN-REXMIT
inet.transportlayer.tcp.Tcp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.transportlayer.tcp.Tcp: TAG: addTagIfAbsent inet::L3AddressReq
inet.transportlayer.tcp.Tcp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: TAG: addTagIfAbsent inet::TransportProtocolInd
inet.transportlayer.tcp.Tcp: TAG: addTag inet::DscpReq
inet.transportlayer.tcp.Tcp: TAG: addTag inet::HopLimitReq
inet.transportlayer.tcp.Tcp: TAG: addTag inet::SocketInd
inet.transportlayer.tcp.Tcp: TAG: findTag inet::DscpReq
inet.transportlayer.tcp.Tcp: TAG: findTag inet::EcnInd
inet.transportlayer.tcp.Tcp: TAG: findTag inet::HopLimitReq
inet.transportlayer.tcp.Tcp: TAG: getTag inet::L3AddressInd
inet.transportlayer.tcp.Tcp: TAG: getTag inet::NetworkProtocolInd
inet.transportlayer.tcp.Tcp: TAG: getTag inet::PacketProtocolTag
inet.transportlayer.tcp.Tcp: TAG: getTag inet::SocketReq
inet.transportlayer.udp.Udp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::arrived info=<nullptr>
inet.transportlayer.udp.Udp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterProtocol info=handleRegisterProtocol
inet.transportlayer.udp.Udp: CALL: module=inet.common.MessageDispatcher func=inet::MessageDispatcher::handleRegisterService info=handleRegisterService
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.common.InterfaceTable func=inet::InterfaceTable::interfaceChanged info=<nullptr>
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.icmpv6.Icmpv6 func=inet::Icmpv6::sendErrorMessage info=sendErrorMessage(datagram, type=%d, code=%d)
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.ipv4.Icmp func=inet::Icmp::sendErrorMessage info=sendErrorMessage(datagram, type=%d, code=%d)
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.ipv4.Igmpv2 func=inet::Igmpv2::receiveSignal info=<nullptr>
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.ipv4.Ipv4 func=inet::Ipv4::registerHook info=registerHook()
inet.transportlayer.udp.Udp: CALL: module=inet.networklayer.ipv6.Ipv6 func=inet::Ipv6::registerHook info=registerHook()
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::InterfaceReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressReq,inet::L4PortReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Packet kind=inet::UdpCommandCode::UDP_C_DATA ctrl=<null> tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_BIND ctrl=inet::UdpBindCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CLOSE ctrl=inet::UdpCloseCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_CONNECT ctrl=inet::UdpConnectCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpJoinMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpLeaveMulticastGroupsCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetBroadcastCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetMulticastInterfaceCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetMulticastLoopCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=appIn msg=inet::Request kind=inet::UdpCommandCode::UDP_C_SETOPTION ctrl=inet::UdpSetTimeToLiveCommand tags=inet::DispatchProtocolReq,inet::SocketReq
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolInd,inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::UserPriorityInd
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag,inet::UserPriorityInd
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::L3AddressInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=174 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=192 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: INPUT: gate=ipIn msg=inet::Packet kind=4 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::PacketProtocolTag
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_ERROR ctrl=inet::UdpErrorIndication tags=inet::L3AddressInd,inet::L4PortInd,inet::SocketInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Indication kind=inet::UdpStatusInd::UDP_I_SOCKET_CLOSED ctrl=inet::UdpSocketClosedIndication tags=inet::SocketInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DispatchProtocolInd,inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd,inet::physicallayer::Ieee80211ChannelInd,inet::physicallayer::Ieee80211ModeInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::ErrorRateInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SignalPowerInd,inet::SignalTimeInd,inet::SnirInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::Ieee802SapInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd,inet::UserPriorityInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::MacAddressInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=appOut msg=inet::Packet kind=inet::UdpStatusInd::UDP_I_DATA ctrl=<null> tags=inet::DscpInd,inet::EcnInd,inet::HopLimitInd,inet::InterfaceInd,inet::L3AddressInd,inet::L4PortInd,inet::NetworkProtocolInd,inet::SocketInd,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::InterfaceReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::HopLimitReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::InterfaceReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: OUTPUT: gate=ipOut msg=inet::Packet kind=0 ctrl=<null> tags=inet::DispatchProtocolReq,inet::DscpReq,inet::L3AddressReq,inet::MulticastReq,inet::PacketProtocolTag,inet::TransportProtocolInd
inet.transportlayer.udp.Udp: PACKET: insertAtFront inet::Ipv4Header
inet.transportlayer.udp.Udp: PACKET: insertAtFront inet::Ipv6Header
inet.transportlayer.udp.Udp: PACKET: insertAtFront inet::UdpHeader
inet.transportlayer.udp.Udp: PACKET: popAtFront inet::IcmpHeader
inet.transportlayer.udp.Udp: PACKET: popAtFront inet::Icmpv6Header
inet.transportlayer.udp.Udp: PACKET: popAtFront inet::Ipv4Header
inet.transportlayer.udp.Udp: PACKET: popAtFront inet::Ipv6Header
inet.transportlayer.udp.Udp: PACKET: popAtFront inet::UdpHeader
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::DispatchProtocolReq
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::InterfaceReq
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::L3AddressReq
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::L4PortInd
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::PacketProtocolTag
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::SocketInd
inet.transportlayer.udp.Udp: TAG: addTagIfAbsent inet::TransportProtocolInd
inet.transportlayer.udp.Udp: TAG: addTag inet::DscpReq
inet.transportlayer.udp.Udp: TAG: addTag inet::HopLimitReq
inet.transportlayer.udp.Udp: TAG: addTag inet::L3AddressInd
inet.transportlayer.udp.Udp: TAG: addTag inet::L4PortInd
inet.transportlayer.udp.Udp: TAG: addTag inet::MulticastReq
inet.transportlayer.udp.Udp: TAG: addTag inet::SocketInd
inet.transportlayer.udp.Udp: TAG: findTag inet::DscpReq
inet.transportlayer.udp.Udp: TAG: findTag inet::ErrorRateInd
inet.transportlayer.udp.Udp: TAG: findTag inet::HopLimitReq
inet.transportlayer.udp.Udp: TAG: findTag inet::InterfaceReq
inet.transportlayer.udp.Udp: TAG: findTag inet::MulticastReq
inet.transportlayer.udp.Udp: TAG: getTag inet::InterfaceInd
inet.transportlayer.udp.Udp: TAG: getTag inet::Ipv4InterfaceData
inet.transportlayer.udp.Udp: TAG: getTag inet::Ipv6InterfaceData
inet.transportlayer.udp.Udp: TAG: getTag inet::L3AddressInd
inet.transportlayer.udp.Udp: TAG: getTag inet::NetworkProtocolInd
inet.transportlayer.udp.Udp: TAG: getTag inet::PacketProtocolTag
inet.transportlayer.udp.Udp: TAG: getTag inet::SocketReq
inet.transportlayer.udp.Udp: TAG: removeTag inet::PacketProtocolTag
inet.transportlayer.udp.Udp: TAG: removeTag inet::SocketReq
